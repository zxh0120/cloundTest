--------------------------------------------------------
--  File created - Friday-December-13-2019   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Type TYPE_CALLIN
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TYPE_CALLIN" As Object (
    Taskid            Varchar2(50),
    Callednumber      Varchar2(25),
    Callernumber      Varchar2(25),
    Oricallednumber   Varchar2(25),
    Starttime         Date,
    Endtime           Date,
    Filename          Varchar2(255),
    Customer_Id       Number(8, 0),
    Uuid              Varchar2(100)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_CALLINS
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TYPE_CALLINS" As
    Table Of Type_Callin;

/
--------------------------------------------------------
--  DDL for Type TYPE_CALLIN_SEND
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TYPE_CALLIN_SEND" AS OBJECT
(
   TaskID VARCHAR2 (50),
   CalledNumber VARCHAR2 (25),
   CallerNumber VARCHAR2 (25),
   OriCalledNumber VARCHAR2 (25),
   StartTime DATE,
   EndTime DATE,
   FileName VARCHAR2 (255),
   UUID VARCHAR2 (100),
   Userid NUMBER (10),
   CUSTOMER_ID NUMBER (8),
   sendurl VARCHAR2 (120),
   recordid varchar2(100)
)

/
--------------------------------------------------------
--  DDL for Type TYPE_CALLIN_SENDS
--------------------------------------------------------

  CREATE OR REPLACE TYPE "TYPE_CALLIN_SENDS" AS TABLE OF TYPE_CALLIN_send

/
--------------------------------------------------------
--  DDL for Sequence AQ$_CALLINS_N
--------------------------------------------------------

   CREATE SEQUENCE  "AQ$_CALLINS_N"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ACCOUNTID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ACCOUNTID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000001 CACHE 100 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ASSISTANTID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ASSISTANTID"  MINVALUE 10000000 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000060 CACHE 20 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BILLID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_BILLID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000001 CACHE 100 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_BLACKID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_BLACKID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10006001 CACHE 1000 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_COLLECTID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_COLLECTID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000001 CACHE 1000 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CONFIGID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CONFIGID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000001 CACHE 100 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_CUSTOMERID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_CUSTOMERID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000001 CACHE 100 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ORDERID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ORDERID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10011001 CACHE 1000 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_ORDERSID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_ORDERSID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10010001 CACHE 1000 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_TOKENID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_TOKENID"  MINVALUE 10000001 MAXVALUE 99999999 INCREMENT BY 1 START WITH 10000901 CACHE 100 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Sequence SEQ_USERID
--------------------------------------------------------

   CREATE SEQUENCE  "SEQ_USERID"  MINVALUE 1000000001 MAXVALUE 9999999999 INCREMENT BY 1 START WITH 1000008001 CACHE 1000 NOORDER  CYCLE ;
--------------------------------------------------------
--  DDL for Table AISWEB_TGRANT
--------------------------------------------------------

  CREATE TABLE "AISWEB_TGRANT" 
   (	"OWNER_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"USER_GROUPID" NUMBER, 
	"POWER_ID" NUMBER, 
	"REMARK" VARCHAR2(64 BYTE), 
	"GRANT_OPTION" CHAR(1 BYTE), 
	"CREATE_TIME" DATE, 
	"POWER_GROUPID" NUMBER, 
	"CREATE_USERID" NUMBER
   ) ;
--------------------------------------------------------
--  DDL for Table AISWEB_TPOWER
--------------------------------------------------------

  CREATE TABLE "AISWEB_TPOWER" 
   (	"POWER_ID" NUMBER, 
	"POWER_NAME" VARCHAR2(64 BYTE), 
	"URL_PATH" VARCHAR2(64 BYTE), 
	"ACTIVE_TYPE" VARCHAR2(64 BYTE), 
	"REMARK" VARCHAR2(64 BYTE), 
	"CREATE_TIME" DATE, 
	"POWER_GROUPID" NUMBER
   ) ;
--------------------------------------------------------
--  DDL for Table AISWEB_TUSER
--------------------------------------------------------

  CREATE TABLE "AISWEB_TUSER" 
   (	"USER_ID" NUMBER, 
	"USER_NAME" VARCHAR2(32 BYTE), 
	"USER_GROUPID" NUMBER, 
	"REMARK" VARCHAR2(64 BYTE), 
	"CREATE_TIME" DATE, 
	"IS_LOCKED" CHAR(1 BYTE), 
	"USER_STATE" NUMBER, 
	"LOGIN_PWD" VARCHAR2(32 BYTE)
   ) ;
--------------------------------------------------------
--  DDL for Table AISWEB_TUSERGROUP
--------------------------------------------------------

  CREATE TABLE "AISWEB_TUSERGROUP" 
   (	"GROUP_ID" NUMBER, 
	"GROUP_NAME" VARCHAR2(32 BYTE), 
	"REMARK" VARCHAR2(64 BYTE), 
	"CREATE_TIME" DATE
   ) ;
--------------------------------------------------------
--  DDL for Table AIS_TACCOUNT
--------------------------------------------------------

  CREATE TABLE "AIS_TACCOUNT" 
   (	"TACT_ID" NUMBER(8,0), 
	"ACCOUNT_NAME" VARCHAR2(64 BYTE), 
	"ACCOUNT_PWD" VARCHAR2(32 BYTE), 
	"ACCOUNT_STATE" NUMBER(1,0), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"REMARKS" VARCHAR2(1024 BYTE), 
	"CREATER_ID" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6)
   ) ;

   COMMENT ON COLUMN "AIS_TACCOUNT"."TACT_ID" IS '账户编号';
   COMMENT ON COLUMN "AIS_TACCOUNT"."ACCOUNT_NAME" IS '账户名称';
   COMMENT ON COLUMN "AIS_TACCOUNT"."ACCOUNT_PWD" IS '账户密码';
   COMMENT ON COLUMN "AIS_TACCOUNT"."ACCOUNT_STATE" IS '账户状态';
   COMMENT ON COLUMN "AIS_TACCOUNT"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TACCOUNT"."REMARKS" IS '备注';
   COMMENT ON COLUMN "AIS_TACCOUNT"."CREATER_ID" IS '创建人编号';
   COMMENT ON COLUMN "AIS_TACCOUNT"."CREATE_TIME" IS '创建时间';
   COMMENT ON TABLE "AIS_TACCOUNT"  IS '商户账户';
--------------------------------------------------------
--  DDL for Table AIS_TASSISTANT
--------------------------------------------------------

  CREATE TABLE "AIS_TASSISTANT" 
   (	"ASSISTANT_ID" VARCHAR2(16 BYTE), 
	"USER_ID" NUMBER(10,0), 
	"USER_SURNAME" VARCHAR2(32 BYTE), 
	"USER_SURNAME_PY" VARCHAR2(32 BYTE), 
	"USER_APPELLATION" VARCHAR2(32 BYTE), 
	"USER_APPELLATION_PY" VARCHAR2(32 BYTE), 
	"SOUNDER_ID" NUMBER(4,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(2,0), 
	"IS_VALID" NUMBER(1,0)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART00"  VALUES (00) , 
 PARTITION "PART01"  VALUES (01) , 
 PARTITION "PART02"  VALUES (02) , 
 PARTITION "PART03"  VALUES (03) , 
 PARTITION "PART04"  VALUES (04) , 
 PARTITION "PART05"  VALUES (05) , 
 PARTITION "PART06"  VALUES (06) , 
 PARTITION "PART07"  VALUES (07) , 
 PARTITION "PART08"  VALUES (08) , 
 PARTITION "PART09"  VALUES (09) , 
 PARTITION "PART10"  VALUES (10) , 
 PARTITION "PART11"  VALUES (11) , 
 PARTITION "PART12"  VALUES (12) , 
 PARTITION "PART13"  VALUES (13) , 
 PARTITION "PART14"  VALUES (14) , 
 PARTITION "PART15"  VALUES (15) , 
 PARTITION "PART16"  VALUES (16) , 
 PARTITION "PART17"  VALUES (17) , 
 PARTITION "PART18"  VALUES (18) , 
 PARTITION "PART19"  VALUES (19) , 
 PARTITION "PART20"  VALUES (20) , 
 PARTITION "PART21"  VALUES (21) , 
 PARTITION "PART22"  VALUES (22) , 
 PARTITION "PART23"  VALUES (23) , 
 PARTITION "PART24"  VALUES (24) , 
 PARTITION "PART25"  VALUES (25) , 
 PARTITION "PART26"  VALUES (26) , 
 PARTITION "PART27"  VALUES (27) , 
 PARTITION "PART28"  VALUES (28) , 
 PARTITION "PART29"  VALUES (29) , 
 PARTITION "PART30"  VALUES (30) , 
 PARTITION "PART31"  VALUES (31) , 
 PARTITION "PART32"  VALUES (32) , 
 PARTITION "PART33"  VALUES (33) , 
 PARTITION "PART34"  VALUES (34) , 
 PARTITION "PART35"  VALUES (35) , 
 PARTITION "PART36"  VALUES (36) , 
 PARTITION "PART37"  VALUES (37) , 
 PARTITION "PART38"  VALUES (38) , 
 PARTITION "PART39"  VALUES (39) , 
 PARTITION "PART40"  VALUES (40) , 
 PARTITION "PART41"  VALUES (41) , 
 PARTITION "PART42"  VALUES (42) , 
 PARTITION "PART43"  VALUES (43) , 
 PARTITION "PART44"  VALUES (44) , 
 PARTITION "PART45"  VALUES (45) , 
 PARTITION "PART46"  VALUES (46) , 
 PARTITION "PART47"  VALUES (47) , 
 PARTITION "PART48"  VALUES (48) , 
 PARTITION "PART49"  VALUES (49) , 
 PARTITION "PART50"  VALUES (50) , 
 PARTITION "PART51"  VALUES (51) , 
 PARTITION "PART52"  VALUES (52) , 
 PARTITION "PART53"  VALUES (53) , 
 PARTITION "PART54"  VALUES (54) , 
 PARTITION "PART55"  VALUES (55) , 
 PARTITION "PART56"  VALUES (56) , 
 PARTITION "PART57"  VALUES (57) , 
 PARTITION "PART58"  VALUES (58) , 
 PARTITION "PART59"  VALUES (59) , 
 PARTITION "PART60"  VALUES (60) , 
 PARTITION "PART61"  VALUES (61) , 
 PARTITION "PART62"  VALUES (62) , 
 PARTITION "PART63"  VALUES (63) , 
 PARTITION "PART64"  VALUES (64) , 
 PARTITION "PART65"  VALUES (65) , 
 PARTITION "PART66"  VALUES (66) , 
 PARTITION "PART67"  VALUES (67) , 
 PARTITION "PART68"  VALUES (68) , 
 PARTITION "PART69"  VALUES (69) , 
 PARTITION "PART70"  VALUES (70) , 
 PARTITION "PART71"  VALUES (71) , 
 PARTITION "PART72"  VALUES (72) , 
 PARTITION "PART73"  VALUES (73) , 
 PARTITION "PART74"  VALUES (74) , 
 PARTITION "PART75"  VALUES (75) , 
 PARTITION "PART76"  VALUES (76) , 
 PARTITION "PART77"  VALUES (77) , 
 PARTITION "PART78"  VALUES (78) , 
 PARTITION "PART79"  VALUES (79) , 
 PARTITION "PART80"  VALUES (80) , 
 PARTITION "PART81"  VALUES (81) , 
 PARTITION "PART82"  VALUES (82) , 
 PARTITION "PART83"  VALUES (83) , 
 PARTITION "PART84"  VALUES (84) , 
 PARTITION "PART85"  VALUES (85) , 
 PARTITION "PART86"  VALUES (86) , 
 PARTITION "PART87"  VALUES (87) , 
 PARTITION "PART88"  VALUES (88) , 
 PARTITION "PART89"  VALUES (89) , 
 PARTITION "PART90"  VALUES (90) , 
 PARTITION "PART91"  VALUES (91) , 
 PARTITION "PART92"  VALUES (92) , 
 PARTITION "PART93"  VALUES (93) , 
 PARTITION "PART94"  VALUES (94) , 
 PARTITION "PART95"  VALUES (95) , 
 PARTITION "PART96"  VALUES (96) , 
 PARTITION "PART97"  VALUES (97) , 
 PARTITION "PART98"  VALUES (98) , 
 PARTITION "PART99"  VALUES (99) ) ;

   COMMENT ON COLUMN "AIS_TASSISTANT"."ASSISTANT_ID" IS '助理编号';
   COMMENT ON COLUMN "AIS_TASSISTANT"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TASSISTANT"."USER_SURNAME" IS '用户姓氏';
   COMMENT ON COLUMN "AIS_TASSISTANT"."USER_SURNAME_PY" IS '用户姓氏拼音';
   COMMENT ON COLUMN "AIS_TASSISTANT"."USER_APPELLATION" IS '用户称谓';
   COMMENT ON COLUMN "AIS_TASSISTANT"."USER_APPELLATION_PY" IS '用户称谓拼音';
   COMMENT ON COLUMN "AIS_TASSISTANT"."SOUNDER_ID" IS '声优编号';
   COMMENT ON COLUMN "AIS_TASSISTANT"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TASSISTANT"."PARTITION_ID" IS '分区号';
   COMMENT ON COLUMN "AIS_TASSISTANT"."IS_VALID" IS '是否生效';
   COMMENT ON TABLE "AIS_TASSISTANT"  IS '助理配置';
--------------------------------------------------------
--  DDL for Table AIS_TASSISTANT_VOICES
--------------------------------------------------------

  CREATE TABLE "AIS_TASSISTANT_VOICES" 
   (	"VOICE_ID" NUMBER(8,0), 
	"VOICE_TYPE" NUMBER(2,0), 
	"VOICE_PINYIN" VARCHAR2(32 BYTE), 
	"CREATE_TIME" TIMESTAMP (6), 
	"VOICE_NAME" VARCHAR2(32 BYTE)
   ) ;

   COMMENT ON COLUMN "AIS_TASSISTANT_VOICES"."VOICE_ID" IS '语音编号';
   COMMENT ON COLUMN "AIS_TASSISTANT_VOICES"."VOICE_TYPE" IS '语音类型';
   COMMENT ON COLUMN "AIS_TASSISTANT_VOICES"."VOICE_PINYIN" IS '语音名称-拼音';
   COMMENT ON COLUMN "AIS_TASSISTANT_VOICES"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TASSISTANT_VOICES"."VOICE_NAME" IS '语音名称';
--------------------------------------------------------
--  DDL for Table AIS_TAUDIT_TRIES_LIMIT
--------------------------------------------------------

  CREATE TABLE "AIS_TAUDIT_TRIES_LIMIT" 
   (	"AUDIT_ID" NUMBER, 
	"TODR_ID" VARCHAR2(16 BYTE), 
	"CYCLY_TYPE" NUMBER(2,0), 
	"CYCLY_VALUE" NUMBER(4,0), 
	"LIMIT_TIMES" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"VALID_TIME" TIMESTAMP (6), 
	"INVALID_TIME" TIMESTAMP (6), 
	"CREATER_ID" NUMBER(4,0), 
	"REMARKS" VARCHAR2(512 BYTE)
   ) ;

   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."AUDIT_ID" IS '鉴权唯一编号';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."TODR_ID" IS '计费规则编号';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."CYCLY_TYPE" IS '周期类型
HOUR_LIMIT = 0;
DAY_LIMIT = 1;
WEEK_LIMIT = 2;
MONTH_LIMIT = 3;
YEAR_LIMIT = 4;
ENTRY_LIMIT = 5;';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."CYCLY_VALUE" IS '周期个数';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."LIMIT_TIMES" IS '限制次数';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."VALID_TIME" IS '生效时间';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."INVALID_TIME" IS '失效时间';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."CREATER_ID" IS '创建人编号';
   COMMENT ON COLUMN "AIS_TAUDIT_TRIES_LIMIT"."REMARKS" IS '备注';
--------------------------------------------------------
--  DDL for Table AIS_TBILL
--------------------------------------------------------

  CREATE TABLE "AIS_TBILL" 
   (	"TBL_ID" VARCHAR2(16 BYTE), 
	"BILL_NAME" VARCHAR2(64 BYTE)
   ) ;

   COMMENT ON COLUMN "AIS_TBILL"."TBL_ID" IS '套餐编号';
   COMMENT ON COLUMN "AIS_TBILL"."BILL_NAME" IS '套餐名称';
   COMMENT ON TABLE "AIS_TBILL"  IS '套餐类型';
--------------------------------------------------------
--  DDL for Table AIS_TBLACKER
--------------------------------------------------------

  CREATE TABLE "AIS_TBLACKER" 
   (	"TB_ID" VARCHAR2(16 BYTE), 
	"PHONE_NBR" VARCHAR2(11 BYTE), 
	"USER_ID" NUMBER(10,0), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(2,0), 
	"VALID_STATE" NUMBER(1,0) DEFAULT 0
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART00"  VALUES (00) , 
 PARTITION "PART01"  VALUES (01) , 
 PARTITION "PART02"  VALUES (02) , 
 PARTITION "PART03"  VALUES (03) , 
 PARTITION "PART04"  VALUES (04) , 
 PARTITION "PART05"  VALUES (05) , 
 PARTITION "PART06"  VALUES (06) , 
 PARTITION "PART07"  VALUES (07) , 
 PARTITION "PART08"  VALUES (08) , 
 PARTITION "PART09"  VALUES (09) , 
 PARTITION "PART10"  VALUES (10) , 
 PARTITION "PART11"  VALUES (11) , 
 PARTITION "PART12"  VALUES (12) , 
 PARTITION "PART13"  VALUES (13) , 
 PARTITION "PART14"  VALUES (14) , 
 PARTITION "PART15"  VALUES (15) , 
 PARTITION "PART16"  VALUES (16) , 
 PARTITION "PART17"  VALUES (17) , 
 PARTITION "PART18"  VALUES (18) , 
 PARTITION "PART19"  VALUES (19) , 
 PARTITION "PART20"  VALUES (20) , 
 PARTITION "PART21"  VALUES (21) , 
 PARTITION "PART22"  VALUES (22) , 
 PARTITION "PART23"  VALUES (23) , 
 PARTITION "PART24"  VALUES (24) , 
 PARTITION "PART25"  VALUES (25) , 
 PARTITION "PART26"  VALUES (26) , 
 PARTITION "PART27"  VALUES (27) , 
 PARTITION "PART28"  VALUES (28) , 
 PARTITION "PART29"  VALUES (29) , 
 PARTITION "PART30"  VALUES (30) , 
 PARTITION "PART31"  VALUES (31) , 
 PARTITION "PART32"  VALUES (32) , 
 PARTITION "PART33"  VALUES (33) , 
 PARTITION "PART34"  VALUES (34) , 
 PARTITION "PART35"  VALUES (35) , 
 PARTITION "PART36"  VALUES (36) , 
 PARTITION "PART37"  VALUES (37) , 
 PARTITION "PART38"  VALUES (38) , 
 PARTITION "PART39"  VALUES (39) , 
 PARTITION "PART40"  VALUES (40) , 
 PARTITION "PART41"  VALUES (41) , 
 PARTITION "PART42"  VALUES (42) , 
 PARTITION "PART43"  VALUES (43) , 
 PARTITION "PART44"  VALUES (44) , 
 PARTITION "PART45"  VALUES (45) , 
 PARTITION "PART46"  VALUES (46) , 
 PARTITION "PART47"  VALUES (47) , 
 PARTITION "PART48"  VALUES (48) , 
 PARTITION "PART49"  VALUES (49) , 
 PARTITION "PART50"  VALUES (50) , 
 PARTITION "PART51"  VALUES (51) , 
 PARTITION "PART52"  VALUES (52) , 
 PARTITION "PART53"  VALUES (53) , 
 PARTITION "PART54"  VALUES (54) , 
 PARTITION "PART55"  VALUES (55) , 
 PARTITION "PART56"  VALUES (56) , 
 PARTITION "PART57"  VALUES (57) , 
 PARTITION "PART58"  VALUES (58) , 
 PARTITION "PART59"  VALUES (59) , 
 PARTITION "PART60"  VALUES (60) , 
 PARTITION "PART61"  VALUES (61) , 
 PARTITION "PART62"  VALUES (62) , 
 PARTITION "PART63"  VALUES (63) , 
 PARTITION "PART64"  VALUES (64) , 
 PARTITION "PART65"  VALUES (65) , 
 PARTITION "PART66"  VALUES (66) , 
 PARTITION "PART67"  VALUES (67) , 
 PARTITION "PART68"  VALUES (68) , 
 PARTITION "PART69"  VALUES (69) , 
 PARTITION "PART70"  VALUES (70) , 
 PARTITION "PART71"  VALUES (71) , 
 PARTITION "PART72"  VALUES (72) , 
 PARTITION "PART73"  VALUES (73) , 
 PARTITION "PART74"  VALUES (74) , 
 PARTITION "PART75"  VALUES (75) , 
 PARTITION "PART76"  VALUES (76) , 
 PARTITION "PART77"  VALUES (77) , 
 PARTITION "PART78"  VALUES (78) , 
 PARTITION "PART79"  VALUES (79) , 
 PARTITION "PART80"  VALUES (80) , 
 PARTITION "PART81"  VALUES (81) , 
 PARTITION "PART82"  VALUES (82) , 
 PARTITION "PART83"  VALUES (83) , 
 PARTITION "PART84"  VALUES (84) , 
 PARTITION "PART85"  VALUES (85) , 
 PARTITION "PART86"  VALUES (86) , 
 PARTITION "PART87"  VALUES (87) , 
 PARTITION "PART88"  VALUES (88) , 
 PARTITION "PART89"  VALUES (89) , 
 PARTITION "PART90"  VALUES (90) , 
 PARTITION "PART91"  VALUES (91) , 
 PARTITION "PART92"  VALUES (92) , 
 PARTITION "PART93"  VALUES (93) , 
 PARTITION "PART94"  VALUES (94) , 
 PARTITION "PART95"  VALUES (95) , 
 PARTITION "PART96"  VALUES (96) , 
 PARTITION "PART97"  VALUES (97) , 
 PARTITION "PART98"  VALUES (98) , 
 PARTITION "PART99"  VALUES (99) ) ;

   COMMENT ON COLUMN "AIS_TBLACKER"."TB_ID" IS '流水号';
   COMMENT ON COLUMN "AIS_TBLACKER"."PHONE_NBR" IS '手机号码';
   COMMENT ON COLUMN "AIS_TBLACKER"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TBLACKER"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TBLACKER"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TBLACKER"."PARTITION_ID" IS '分区号';
   COMMENT ON COLUMN "AIS_TBLACKER"."VALID_STATE" IS '生效状态(0生效;1失效)';
   COMMENT ON TABLE "AIS_TBLACKER"  IS '黑名单';
--------------------------------------------------------
--  DDL for Table AIS_TBUSINESS
--------------------------------------------------------

  CREATE TABLE "AIS_TBUSINESS" 
   (	"TCTR_ID" NUMBER(8,0), 
	"CUSTOMER_NAME" VARCHAR2(64 BYTE), 
	"CUSTOMER_TYPE" NUMBER(2,0), 
	"IS_TRANS" NUMBER(1,0), 
	"IS_ORDER" NUMBER(1,0), 
	"IS_NOTIFY" NUMBER(1,0), 
	"IS_PUSH" NUMBER(1,0), 
	"MANAGER_ID" NUMBER(8,0), 
	"LINK_MAN" VARCHAR2(512 BYTE) DEFAULT '1', 
	"REMARKS" VARCHAR2(1024 BYTE), 
	"CREATE_ID" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PUSH_URL" VARCHAR2(128 BYTE)
   ) ;

   COMMENT ON COLUMN "AIS_TBUSINESS"."TCTR_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TBUSINESS"."CUSTOMER_NAME" IS '商户名称';
   COMMENT ON COLUMN "AIS_TBUSINESS"."CUSTOMER_TYPE" IS '商户类型';
   COMMENT ON COLUMN "AIS_TBUSINESS"."IS_TRANS" IS '是否可转接';
   COMMENT ON COLUMN "AIS_TBUSINESS"."IS_ORDER" IS '是否可订购';
   COMMENT ON COLUMN "AIS_TBUSINESS"."IS_NOTIFY" IS '是否发送通知';
   COMMENT ON COLUMN "AIS_TBUSINESS"."IS_PUSH" IS '是否可推送';
   COMMENT ON COLUMN "AIS_TBUSINESS"."MANAGER_ID" IS '客户经理编号[1虚商,2渠道]';
   COMMENT ON COLUMN "AIS_TBUSINESS"."LINK_MAN" IS '联系人';
   COMMENT ON COLUMN "AIS_TBUSINESS"."REMARKS" IS '备注';
   COMMENT ON COLUMN "AIS_TBUSINESS"."CREATE_ID" IS '创建人编号';
   COMMENT ON COLUMN "AIS_TBUSINESS"."CREATE_TIME" IS '创建时间';
   COMMENT ON TABLE "AIS_TBUSINESS"  IS '商户';
--------------------------------------------------------
--  DDL for Table AIS_TCHECKPOINT
--------------------------------------------------------

  CREATE TABLE "AIS_TCHECKPOINT" 
   (	"VOICE_CODE" VARCHAR2(6 BYTE), 
	"FLOW_NODE" VARCHAR2(128 BYTE), 
	"CONTENT" VARCHAR2(2048 BYTE), 
	"CREATE_TIME" TIMESTAMP (6), 
	"CONTENT_CLASS" NUMBER(6,0), 
	"RATE_ID" NUMBER(6,0), 
	"CHECKPOINT_ID" NUMBER(6,0)
   ) ;
--------------------------------------------------------
--  DDL for Table AIS_TCONFIG
--------------------------------------------------------

  CREATE TABLE "AIS_TCONFIG" 
   (	"TCFG_ID" VARCHAR2(16 BYTE), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"CUSTOMER_NAME" VARCHAR2(64 BYTE), 
	"CUSTOMER_TYPE" NUMBER(2,0), 
	"SERVICE_ID" NUMBER(4,0), 
	"SERVICE_NAME" VARCHAR2(64 BYTE), 
	"BILL_ID" VARCHAR2(16 BYTE), 
	"BILL_UNIT" NUMBER(8,0), 
	"BILL_TYPE" NUMBER(4,0), 
	"BILL_STATE" NUMBER(1,0), 
	"SMS_TOTLE" NUMBER(10,0), 
	"PRICE" NUMBER(8,0), 
	"VOLID_TIME" TIMESTAMP (6), 
	"INVOLID_TIME" TIMESTAMP (6), 
	"CREATER_ID" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6)
   ) ;

   COMMENT ON COLUMN "AIS_TCONFIG"."TCFG_ID" IS '配置编号';
   COMMENT ON COLUMN "AIS_TCONFIG"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TCONFIG"."CUSTOMER_NAME" IS '商户名称';
   COMMENT ON COLUMN "AIS_TCONFIG"."CUSTOMER_TYPE" IS '商户类型';
   COMMENT ON COLUMN "AIS_TCONFIG"."SERVICE_ID" IS '业务编号';
   COMMENT ON COLUMN "AIS_TCONFIG"."SERVICE_NAME" IS '业务名称';
   COMMENT ON COLUMN "AIS_TCONFIG"."BILL_ID" IS '套餐编号';
   COMMENT ON COLUMN "AIS_TCONFIG"."BILL_UNIT" IS '套餐周期';
   COMMENT ON COLUMN "AIS_TCONFIG"."BILL_TYPE" IS '套餐类型';
   COMMENT ON COLUMN "AIS_TCONFIG"."BILL_STATE" IS '套餐状态';
   COMMENT ON COLUMN "AIS_TCONFIG"."SMS_TOTLE" IS '短信余量';
   COMMENT ON COLUMN "AIS_TCONFIG"."PRICE" IS '单价';
   COMMENT ON COLUMN "AIS_TCONFIG"."VOLID_TIME" IS '生效时间';
   COMMENT ON COLUMN "AIS_TCONFIG"."INVOLID_TIME" IS '失效时间';
   COMMENT ON COLUMN "AIS_TCONFIG"."CREATER_ID" IS '创建人编号';
   COMMENT ON COLUMN "AIS_TCONFIG"."CREATE_TIME" IS '创建时间';
   COMMENT ON TABLE "AIS_TCONFIG"  IS '业务计费套餐表';
--------------------------------------------------------
--  DDL for Table AIS_TCONTENTTYPE
--------------------------------------------------------

  CREATE TABLE "AIS_TCONTENTTYPE" 
   (	"ID" NUMBER, 
	"TYPE_NAME" VARCHAR2(64 BYTE)
   ) ;
--------------------------------------------------------
--  DDL for Table AIS_TCRONTORLOG
--------------------------------------------------------

  CREATE TABLE "AIS_TCRONTORLOG" 
   (	"TRQT_ID" VARCHAR2(29 BYTE), 
	"REQUEST_TYPE" NUMBER(1,0), 
	"COLLECT_ID" VARCHAR2(16 BYTE), 
	"USER_ID" NUMBER(10,0), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"CUSTOMER_NAME" VARCHAR2(64 BYTE), 
	"CUSTOMER_TYPE" NUMBER(2,0), 
	"AREA_ID" NUMBER(6,0), 
	"AREA" VARCHAR2(64 BYTE), 
	"PROVINCE" VARCHAR2(64 BYTE), 
	"IS_VOLID" NUMBER(1,0), 
	"ERR_MSG" VARCHAR2(128 BYTE), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(6,0)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART201901"  VALUES (201901) , 
 PARTITION "PART201902"  VALUES (201902) , 
 PARTITION "PART201903"  VALUES (201903) , 
 PARTITION "PART201904"  VALUES (201904) , 
 PARTITION "PART201905"  VALUES (201905) , 
 PARTITION "PART201906"  VALUES (201906) , 
 PARTITION "PART201907"  VALUES (201907) , 
 PARTITION "PART201908"  VALUES (201908) , 
 PARTITION "PART201909"  VALUES (201909) , 
 PARTITION "PART201910"  VALUES (201910) , 
 PARTITION "PART201911"  VALUES (201911) , 
 PARTITION "PART201912"  VALUES (201912) , 
 PARTITION "PART202001"  VALUES (202001) , 
 PARTITION "PART202002"  VALUES (202002) , 
 PARTITION "PART202003"  VALUES (202003) , 
 PARTITION "PART202004"  VALUES (202004) , 
 PARTITION "PART202005"  VALUES (202005) , 
 PARTITION "PART202006"  VALUES (202006) , 
 PARTITION "PART202007"  VALUES (202007) , 
 PARTITION "PART202008"  VALUES (202008) , 
 PARTITION "PART202009"  VALUES (202009) , 
 PARTITION "PART202010"  VALUES (202010) , 
 PARTITION "PART202011"  VALUES (202011) , 
 PARTITION "PART202012"  VALUES (202012) , 
 PARTITION "PART202101"  VALUES (202101) , 
 PARTITION "PART202102"  VALUES (202102) , 
 PARTITION "PART202103"  VALUES (202103) , 
 PARTITION "PART202104"  VALUES (202104) , 
 PARTITION "PART202105"  VALUES (202105) , 
 PARTITION "PART202106"  VALUES (202106) , 
 PARTITION "PART202107"  VALUES (202107) , 
 PARTITION "PART202108"  VALUES (202108) , 
 PARTITION "PART202109"  VALUES (202109) , 
 PARTITION "PART202110"  VALUES (202110) , 
 PARTITION "PART202111"  VALUES (202111) , 
 PARTITION "PART202112"  VALUES (202112) ) ;

   COMMENT ON COLUMN "AIS_TCRONTORLOG"."TRQT_ID" IS '订单编号';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."REQUEST_TYPE" IS '订单类型';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."COLLECT_ID" IS '订购编号';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."CUSTOMER_NAME" IS '商户名称';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."CUSTOMER_TYPE" IS '商户类型';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."AREA_ID" IS '归属地编号';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."AREA" IS '归属地';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."PROVINCE" IS '归属省';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."IS_VOLID" IS '是否有效';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."ERR_MSG" IS '错误信息';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TCRONTORLOG"."PARTITION_ID" IS '分区号';
   COMMENT ON TABLE "AIS_TCRONTORLOG"  IS '服务启停日志';
--------------------------------------------------------
--  DDL for Table AIS_TNOTIFY
--------------------------------------------------------

  CREATE TABLE "AIS_TNOTIFY" 
   (	"TASKID" VARCHAR2(50 BYTE), 
	"MOBILE" VARCHAR2(25 BYTE), 
	"MESSAGE" VARCHAR2(2048 BYTE), 
	"CREATE_TIME" TIMESTAMP (6)
   ) ;
--------------------------------------------------------
--  DDL for Table AIS_TORDER
--------------------------------------------------------

  CREATE TABLE "AIS_TORDER" 
   (	"TODR_ID" VARCHAR2(29 BYTE), 
	"COLLECT_ID" VARCHAR2(16 BYTE), 
	"ORDER_TYPE" NUMBER(1,0), 
	"USER_ID" NUMBER(10,0), 
	"CONFIG_ID" VARCHAR2(16 BYTE), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"CUSTOMER_NAME" VARCHAR2(64 BYTE), 
	"CUSTOMER_TYPE" NUMBER(2,0), 
	"SERVICE_ID" NUMBER(4,0), 
	"SERVICE_NAME" VARCHAR2(64 BYTE), 
	"AREA_ID" NUMBER(6,0), 
	"AREA" VARCHAR2(64 BYTE), 
	"PROVINCE" VARCHAR2(64 BYTE), 
	"BILL_ID" VARCHAR2(16 BYTE), 
	"BILL_UNIT" NUMBER(8,0), 
	"BILL_TYPE" NUMBER(4,0), 
	"SMS_TOTLE" NUMBER(10,0), 
	"PRICE" NUMBER(8,0), 
	"CHARGE" NUMBER(8,0), 
	"IS_VOLID" NUMBER(1,0), 
	"ERR_MSG" VARCHAR2(128 BYTE), 
	"CUSTOMER_ORDERID" VARCHAR2(64 BYTE), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(6,0), 
	"TRANS_USER_ID" VARCHAR2(20 BYTE)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART201901"  VALUES (201901) , 
 PARTITION "PART201902"  VALUES (201902) , 
 PARTITION "PART201903"  VALUES (201903) , 
 PARTITION "PART201904"  VALUES (201904) , 
 PARTITION "PART201905"  VALUES (201905) , 
 PARTITION "PART201906"  VALUES (201906) , 
 PARTITION "PART201907"  VALUES (201907) , 
 PARTITION "PART201908"  VALUES (201908) , 
 PARTITION "PART201909"  VALUES (201909) , 
 PARTITION "PART201910"  VALUES (201910) , 
 PARTITION "PART201911"  VALUES (201911) , 
 PARTITION "PART201912"  VALUES (201912) , 
 PARTITION "PART202001"  VALUES (202001) , 
 PARTITION "PART202002"  VALUES (202002) , 
 PARTITION "PART202003"  VALUES (202003) , 
 PARTITION "PART202004"  VALUES (202004) , 
 PARTITION "PART202005"  VALUES (202005) , 
 PARTITION "PART202006"  VALUES (202006) , 
 PARTITION "PART202007"  VALUES (202007) , 
 PARTITION "PART202008"  VALUES (202008) , 
 PARTITION "PART202009"  VALUES (202009) , 
 PARTITION "PART202010"  VALUES (202010) , 
 PARTITION "PART202011"  VALUES (202011) , 
 PARTITION "PART202012"  VALUES (202012) , 
 PARTITION "PART202101"  VALUES (202101) , 
 PARTITION "PART202102"  VALUES (202102) , 
 PARTITION "PART202103"  VALUES (202103) , 
 PARTITION "PART202104"  VALUES (202104) , 
 PARTITION "PART202105"  VALUES (202105) , 
 PARTITION "PART202106"  VALUES (202106) , 
 PARTITION "PART202107"  VALUES (202107) , 
 PARTITION "PART202108"  VALUES (202108) , 
 PARTITION "PART202109"  VALUES (202109) , 
 PARTITION "PART202110"  VALUES (202110) , 
 PARTITION "PART202111"  VALUES (202111) , 
 PARTITION "PART202112"  VALUES (202112) ) ;

   COMMENT ON COLUMN "AIS_TORDER"."TODR_ID" IS '订单编号';
   COMMENT ON COLUMN "AIS_TORDER"."COLLECT_ID" IS '订购编号';
   COMMENT ON COLUMN "AIS_TORDER"."ORDER_TYPE" IS '订单类型(0订购；1退订；2转用户 3用户注销)';
   COMMENT ON COLUMN "AIS_TORDER"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TORDER"."CONFIG_ID" IS '配置编号';
   COMMENT ON COLUMN "AIS_TORDER"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TORDER"."CUSTOMER_NAME" IS '商户名称';
   COMMENT ON COLUMN "AIS_TORDER"."CUSTOMER_TYPE" IS '商户类型';
   COMMENT ON COLUMN "AIS_TORDER"."SERVICE_ID" IS '业务编号';
   COMMENT ON COLUMN "AIS_TORDER"."SERVICE_NAME" IS '业务名称';
   COMMENT ON COLUMN "AIS_TORDER"."AREA_ID" IS '归属地编号';
   COMMENT ON COLUMN "AIS_TORDER"."AREA" IS '归属地';
   COMMENT ON COLUMN "AIS_TORDER"."PROVINCE" IS '归属省';
   COMMENT ON COLUMN "AIS_TORDER"."BILL_ID" IS '套餐编号';
   COMMENT ON COLUMN "AIS_TORDER"."BILL_UNIT" IS '套餐周期';
   COMMENT ON COLUMN "AIS_TORDER"."BILL_TYPE" IS '套餐类型';
   COMMENT ON COLUMN "AIS_TORDER"."SMS_TOTLE" IS '短信余量';
   COMMENT ON COLUMN "AIS_TORDER"."PRICE" IS '单价';
   COMMENT ON COLUMN "AIS_TORDER"."CHARGE" IS '费用';
   COMMENT ON COLUMN "AIS_TORDER"."IS_VOLID" IS '是否有效';
   COMMENT ON COLUMN "AIS_TORDER"."ERR_MSG" IS '错误信息';
   COMMENT ON COLUMN "AIS_TORDER"."CUSTOMER_ORDERID" IS '商户订单编号';
   COMMENT ON COLUMN "AIS_TORDER"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TORDER"."PARTITION_ID" IS '分区号';
   COMMENT ON COLUMN "AIS_TORDER"."TRANS_USER_ID" IS '订购关系迁移的目标
用户编号';
   COMMENT ON TABLE "AIS_TORDER"  IS '订单详单';
--------------------------------------------------------
--  DDL for Table AIS_TORDERS
--------------------------------------------------------

  CREATE TABLE "AIS_TORDERS" 
   (	"TCLT_ID" VARCHAR2(16 BYTE), 
	"USER_ID" NUMBER(10,0), 
	"PHONE_NBR" VARCHAR2(11 BYTE), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"SERVICE_ID" NUMBER(8,0), 
	"OPERATION_TYPE" NUMBER(1,0), 
	"AREA_ID" NUMBER(6,0), 
	"CONFIG_ID" VARCHAR2(16 BYTE), 
	"IS_WORKING" NUMBER(1,0), 
	"SMS_TOTLE" NUMBER(10,0), 
	"FIRST_ORDERTIME" TIMESTAMP (6), 
	"LAST_ORDERTIME" TIMESTAMP (6), 
	"PAUSE_ORDERTIME" TIMESTAMP (6), 
	"STOP_ORDERTIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(2,0)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART00"  VALUES (00) , 
 PARTITION "PART01"  VALUES (01) , 
 PARTITION "PART02"  VALUES (02) , 
 PARTITION "PART03"  VALUES (03) , 
 PARTITION "PART04"  VALUES (04) , 
 PARTITION "PART05"  VALUES (05) , 
 PARTITION "PART06"  VALUES (06) , 
 PARTITION "PART07"  VALUES (07) , 
 PARTITION "PART08"  VALUES (08) , 
 PARTITION "PART09"  VALUES (09) , 
 PARTITION "PART10"  VALUES (10) , 
 PARTITION "PART11"  VALUES (11) , 
 PARTITION "PART12"  VALUES (12) , 
 PARTITION "PART13"  VALUES (13) , 
 PARTITION "PART14"  VALUES (14) , 
 PARTITION "PART15"  VALUES (15) , 
 PARTITION "PART16"  VALUES (16) , 
 PARTITION "PART17"  VALUES (17) , 
 PARTITION "PART18"  VALUES (18) , 
 PARTITION "PART19"  VALUES (19) , 
 PARTITION "PART20"  VALUES (20) , 
 PARTITION "PART21"  VALUES (21) , 
 PARTITION "PART22"  VALUES (22) , 
 PARTITION "PART23"  VALUES (23) , 
 PARTITION "PART24"  VALUES (24) , 
 PARTITION "PART25"  VALUES (25) , 
 PARTITION "PART26"  VALUES (26) , 
 PARTITION "PART27"  VALUES (27) , 
 PARTITION "PART28"  VALUES (28) , 
 PARTITION "PART29"  VALUES (29) , 
 PARTITION "PART30"  VALUES (30) , 
 PARTITION "PART31"  VALUES (31) , 
 PARTITION "PART32"  VALUES (32) , 
 PARTITION "PART33"  VALUES (33) , 
 PARTITION "PART34"  VALUES (34) , 
 PARTITION "PART35"  VALUES (35) , 
 PARTITION "PART36"  VALUES (36) , 
 PARTITION "PART37"  VALUES (37) , 
 PARTITION "PART38"  VALUES (38) , 
 PARTITION "PART39"  VALUES (39) , 
 PARTITION "PART40"  VALUES (40) , 
 PARTITION "PART41"  VALUES (41) , 
 PARTITION "PART42"  VALUES (42) , 
 PARTITION "PART43"  VALUES (43) , 
 PARTITION "PART44"  VALUES (44) , 
 PARTITION "PART45"  VALUES (45) , 
 PARTITION "PART46"  VALUES (46) , 
 PARTITION "PART47"  VALUES (47) , 
 PARTITION "PART48"  VALUES (48) , 
 PARTITION "PART49"  VALUES (49) , 
 PARTITION "PART50"  VALUES (50) , 
 PARTITION "PART51"  VALUES (51) , 
 PARTITION "PART52"  VALUES (52) , 
 PARTITION "PART53"  VALUES (53) , 
 PARTITION "PART54"  VALUES (54) , 
 PARTITION "PART55"  VALUES (55) , 
 PARTITION "PART56"  VALUES (56) , 
 PARTITION "PART57"  VALUES (57) , 
 PARTITION "PART58"  VALUES (58) , 
 PARTITION "PART59"  VALUES (59) , 
 PARTITION "PART60"  VALUES (60) , 
 PARTITION "PART61"  VALUES (61) , 
 PARTITION "PART62"  VALUES (62) , 
 PARTITION "PART63"  VALUES (63) , 
 PARTITION "PART64"  VALUES (64) , 
 PARTITION "PART65"  VALUES (65) , 
 PARTITION "PART66"  VALUES (66) , 
 PARTITION "PART67"  VALUES (67) , 
 PARTITION "PART68"  VALUES (68) , 
 PARTITION "PART69"  VALUES (69) , 
 PARTITION "PART70"  VALUES (70) , 
 PARTITION "PART71"  VALUES (71) , 
 PARTITION "PART72"  VALUES (72) , 
 PARTITION "PART73"  VALUES (73) , 
 PARTITION "PART74"  VALUES (74) , 
 PARTITION "PART75"  VALUES (75) , 
 PARTITION "PART76"  VALUES (76) , 
 PARTITION "PART77"  VALUES (77) , 
 PARTITION "PART78"  VALUES (78) , 
 PARTITION "PART79"  VALUES (79) , 
 PARTITION "PART80"  VALUES (80) , 
 PARTITION "PART81"  VALUES (81) , 
 PARTITION "PART82"  VALUES (82) , 
 PARTITION "PART83"  VALUES (83) , 
 PARTITION "PART84"  VALUES (84) , 
 PARTITION "PART85"  VALUES (85) , 
 PARTITION "PART86"  VALUES (86) , 
 PARTITION "PART87"  VALUES (87) , 
 PARTITION "PART88"  VALUES (88) , 
 PARTITION "PART89"  VALUES (89) , 
 PARTITION "PART90"  VALUES (90) , 
 PARTITION "PART91"  VALUES (91) , 
 PARTITION "PART92"  VALUES (92) , 
 PARTITION "PART93"  VALUES (93) , 
 PARTITION "PART94"  VALUES (94) , 
 PARTITION "PART95"  VALUES (95) , 
 PARTITION "PART96"  VALUES (96) , 
 PARTITION "PART97"  VALUES (97) , 
 PARTITION "PART98"  VALUES (98) , 
 PARTITION "PART99"  VALUES (99) ) ;

   COMMENT ON COLUMN "AIS_TORDERS"."TCLT_ID" IS '订购编号';
   COMMENT ON COLUMN "AIS_TORDERS"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TORDERS"."PHONE_NBR" IS '手机号码';
   COMMENT ON COLUMN "AIS_TORDERS"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TORDERS"."SERVICE_ID" IS '业务编号';
   COMMENT ON COLUMN "AIS_TORDERS"."OPERATION_TYPE" IS '运营商类型';
   COMMENT ON COLUMN "AIS_TORDERS"."AREA_ID" IS '归属地编号';
   COMMENT ON COLUMN "AIS_TORDERS"."CONFIG_ID" IS '配置编号';
   COMMENT ON COLUMN "AIS_TORDERS"."IS_WORKING" IS '启停(服务启停唯一标识)';
   COMMENT ON COLUMN "AIS_TORDERS"."SMS_TOTLE" IS '短信余量';
   COMMENT ON COLUMN "AIS_TORDERS"."FIRST_ORDERTIME" IS '首次订购时间';
   COMMENT ON COLUMN "AIS_TORDERS"."LAST_ORDERTIME" IS '最近订购时间';
   COMMENT ON COLUMN "AIS_TORDERS"."PAUSE_ORDERTIME" IS '暂停服务时间';
   COMMENT ON COLUMN "AIS_TORDERS"."STOP_ORDERTIME" IS '停止服务时间';
   COMMENT ON COLUMN "AIS_TORDERS"."PARTITION_ID" IS '分区号';
   COMMENT ON TABLE "AIS_TORDERS"  IS '订购关系';
--------------------------------------------------------
--  DDL for Table AIS_TSERVICE
--------------------------------------------------------

  CREATE TABLE "AIS_TSERVICE" 
   (	"TSVE_ID" NUMBER(8,0), 
	"SERVICE_NAME" VARCHAR2(64 BYTE), 
	"REMARKS" VARCHAR2(1024 BYTE), 
	"CREATER_ID" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6)
   ) ;

   COMMENT ON COLUMN "AIS_TSERVICE"."TSVE_ID" IS '业务编号';
   COMMENT ON COLUMN "AIS_TSERVICE"."SERVICE_NAME" IS '业务名称';
   COMMENT ON COLUMN "AIS_TSERVICE"."REMARKS" IS '备注';
   COMMENT ON COLUMN "AIS_TSERVICE"."CREATER_ID" IS '创建人编号';
   COMMENT ON COLUMN "AIS_TSERVICE"."CREATE_TIME" IS '创建时间';
   COMMENT ON TABLE "AIS_TSERVICE"  IS '业务';
--------------------------------------------------------
--  DDL for Table AIS_TSMSTEMPLATE
--------------------------------------------------------

  CREATE TABLE "AIS_TSMSTEMPLATE" 
   (	"TEMPLATE_ID" NUMBER(6,0), 
	"CONTENT_CLASS" NUMBER(6,0), 
	"TEMPLATE_CONTENT" VARCHAR2(1024 BYTE), 
	"STATUS" NUMBER(1,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"SIGNER" VARCHAR2(64 BYTE)
   ) ;
--------------------------------------------------------
--  DDL for Table AIS_TTOKEN
--------------------------------------------------------

  CREATE TABLE "AIS_TTOKEN" 
   (	"TTOK_ID" VARCHAR2(16 BYTE), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"TOKEN" VARCHAR2(1024 BYTE), 
	"VALID_TIME" TIMESTAMP (6), 
	"INVALID_TIME" TIMESTAMP (6), 
	"KEEP_ACTIVITY" NUMBER(8,0), 
	"CREATE_TIME" TIMESTAMP (6)
   ) ;

   COMMENT ON COLUMN "AIS_TTOKEN"."TTOK_ID" IS '临时通行证编号';
   COMMENT ON COLUMN "AIS_TTOKEN"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TTOKEN"."TOKEN" IS '临时通行证';
   COMMENT ON COLUMN "AIS_TTOKEN"."VALID_TIME" IS '生效时间';
   COMMENT ON COLUMN "AIS_TTOKEN"."INVALID_TIME" IS '失效时间';
   COMMENT ON COLUMN "AIS_TTOKEN"."KEEP_ACTIVITY" IS '维持时间';
   COMMENT ON COLUMN "AIS_TTOKEN"."CREATE_TIME" IS '创建时间';
   COMMENT ON TABLE "AIS_TTOKEN"  IS '临时通行证';
--------------------------------------------------------
--  DDL for Table AIS_TUSER
--------------------------------------------------------

  CREATE TABLE "AIS_TUSER" 
   (	"USER_ID" NUMBER(10,0), 
	"CUSTOMER_ID" NUMBER(8,0), 
	"PHONE_NBR" VARCHAR2(11 BYTE), 
	"MAIL" VARCHAR2(64 BYTE), 
	"WX_NBR" VARCHAR2(64 BYTE), 
	"OPERATION_TYPE" NUMBER(1,0), 
	"AREA_ID" NUMBER(6,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(2,0), 
	"IS_TESTER" NUMBER(1,0), 
	"USER_STATE" NUMBER(1,0)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART00"  VALUES (00) , 
 PARTITION "PART01"  VALUES (01) , 
 PARTITION "PART02"  VALUES (02) , 
 PARTITION "PART03"  VALUES (03) , 
 PARTITION "PART04"  VALUES (04) , 
 PARTITION "PART05"  VALUES (05) , 
 PARTITION "PART06"  VALUES (06) , 
 PARTITION "PART07"  VALUES (07) , 
 PARTITION "PART08"  VALUES (08) , 
 PARTITION "PART09"  VALUES (09) , 
 PARTITION "PART10"  VALUES (10) , 
 PARTITION "PART11"  VALUES (11) , 
 PARTITION "PART12"  VALUES (12) , 
 PARTITION "PART13"  VALUES (13) , 
 PARTITION "PART14"  VALUES (14) , 
 PARTITION "PART15"  VALUES (15) , 
 PARTITION "PART16"  VALUES (16) , 
 PARTITION "PART17"  VALUES (17) , 
 PARTITION "PART18"  VALUES (18) , 
 PARTITION "PART19"  VALUES (19) , 
 PARTITION "PART20"  VALUES (20) , 
 PARTITION "PART21"  VALUES (21) , 
 PARTITION "PART22"  VALUES (22) , 
 PARTITION "PART23"  VALUES (23) , 
 PARTITION "PART24"  VALUES (24) , 
 PARTITION "PART25"  VALUES (25) , 
 PARTITION "PART26"  VALUES (26) , 
 PARTITION "PART27"  VALUES (27) , 
 PARTITION "PART28"  VALUES (28) , 
 PARTITION "PART29"  VALUES (29) , 
 PARTITION "PART30"  VALUES (30) , 
 PARTITION "PART31"  VALUES (31) , 
 PARTITION "PART32"  VALUES (32) , 
 PARTITION "PART33"  VALUES (33) , 
 PARTITION "PART34"  VALUES (34) , 
 PARTITION "PART35"  VALUES (35) , 
 PARTITION "PART36"  VALUES (36) , 
 PARTITION "PART37"  VALUES (37) , 
 PARTITION "PART38"  VALUES (38) , 
 PARTITION "PART39"  VALUES (39) , 
 PARTITION "PART40"  VALUES (40) , 
 PARTITION "PART41"  VALUES (41) , 
 PARTITION "PART42"  VALUES (42) , 
 PARTITION "PART43"  VALUES (43) , 
 PARTITION "PART44"  VALUES (44) , 
 PARTITION "PART45"  VALUES (45) , 
 PARTITION "PART46"  VALUES (46) , 
 PARTITION "PART47"  VALUES (47) , 
 PARTITION "PART48"  VALUES (48) , 
 PARTITION "PART49"  VALUES (49) , 
 PARTITION "PART50"  VALUES (50) , 
 PARTITION "PART51"  VALUES (51) , 
 PARTITION "PART52"  VALUES (52) , 
 PARTITION "PART53"  VALUES (53) , 
 PARTITION "PART54"  VALUES (54) , 
 PARTITION "PART55"  VALUES (55) , 
 PARTITION "PART56"  VALUES (56) , 
 PARTITION "PART57"  VALUES (57) , 
 PARTITION "PART58"  VALUES (58) , 
 PARTITION "PART59"  VALUES (59) , 
 PARTITION "PART60"  VALUES (60) , 
 PARTITION "PART61"  VALUES (61) , 
 PARTITION "PART62"  VALUES (62) , 
 PARTITION "PART63"  VALUES (63) , 
 PARTITION "PART64"  VALUES (64) , 
 PARTITION "PART65"  VALUES (65) , 
 PARTITION "PART66"  VALUES (66) , 
 PARTITION "PART67"  VALUES (67) , 
 PARTITION "PART68"  VALUES (68) , 
 PARTITION "PART69"  VALUES (69) , 
 PARTITION "PART70"  VALUES (70) , 
 PARTITION "PART71"  VALUES (71) , 
 PARTITION "PART72"  VALUES (72) , 
 PARTITION "PART73"  VALUES (73) , 
 PARTITION "PART74"  VALUES (74) , 
 PARTITION "PART75"  VALUES (75) , 
 PARTITION "PART76"  VALUES (76) , 
 PARTITION "PART77"  VALUES (77) , 
 PARTITION "PART78"  VALUES (78) , 
 PARTITION "PART79"  VALUES (79) , 
 PARTITION "PART80"  VALUES (80) , 
 PARTITION "PART81"  VALUES (81) , 
 PARTITION "PART82"  VALUES (82) , 
 PARTITION "PART83"  VALUES (83) , 
 PARTITION "PART84"  VALUES (84) , 
 PARTITION "PART85"  VALUES (85) , 
 PARTITION "PART86"  VALUES (86) , 
 PARTITION "PART87"  VALUES (87) , 
 PARTITION "PART88"  VALUES (88) , 
 PARTITION "PART89"  VALUES (89) , 
 PARTITION "PART90"  VALUES (90) , 
 PARTITION "PART91"  VALUES (91) , 
 PARTITION "PART92"  VALUES (92) , 
 PARTITION "PART93"  VALUES (93) , 
 PARTITION "PART94"  VALUES (94) , 
 PARTITION "PART95"  VALUES (95) , 
 PARTITION "PART96"  VALUES (96) , 
 PARTITION "PART97"  VALUES (97) , 
 PARTITION "PART98"  VALUES (98) , 
 PARTITION "PART99"  VALUES (99) ) ;

   COMMENT ON COLUMN "AIS_TUSER"."USER_ID" IS '用户编号';
   COMMENT ON COLUMN "AIS_TUSER"."CUSTOMER_ID" IS '商户编号';
   COMMENT ON COLUMN "AIS_TUSER"."PHONE_NBR" IS '手机号码';
   COMMENT ON COLUMN "AIS_TUSER"."MAIL" IS '邮箱';
   COMMENT ON COLUMN "AIS_TUSER"."WX_NBR" IS '微信号';
   COMMENT ON COLUMN "AIS_TUSER"."OPERATION_TYPE" IS '运营商类型';
   COMMENT ON COLUMN "AIS_TUSER"."AREA_ID" IS '归属地编号';
   COMMENT ON COLUMN "AIS_TUSER"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TUSER"."PARTITION_ID" IS '分区号';
   COMMENT ON COLUMN "AIS_TUSER"."IS_TESTER" IS '测试用户-白名单
0:测试用户
1:普通用户';
   COMMENT ON COLUMN "AIS_TUSER"."USER_STATE" IS '用户状态 0生效 1失效';
   COMMENT ON TABLE "AIS_TUSER"  IS '用户';
--------------------------------------------------------
--  DDL for Table AIS_TUSERDIY
--------------------------------------------------------

  CREATE TABLE "AIS_TUSERDIY" 
   (	"USERDIY_ID" VARCHAR2(16 BYTE), 
	"USER_ID" NUMBER(10,0), 
	"CONTENT_TYPE" NUMBER(2,0), 
	"CONTENT_DETAIL" VARCHAR2(1024 BYTE), 
	"FILE_PATH" VARCHAR2(64 BYTE), 
	"FILE_NAME" VARCHAR2(64 BYTE), 
	"STATE" NUMBER(1,0), 
	"CREATE_TIME" TIMESTAMP (6), 
	"PARTITION_ID" NUMBER(2,0)
   ) 
  PARTITION BY LIST ("PARTITION_ID") 
 (PARTITION "PART00"  VALUES (00) , 
 PARTITION "PART01"  VALUES (01) , 
 PARTITION "PART02"  VALUES (02) , 
 PARTITION "PART03"  VALUES (03) , 
 PARTITION "PART04"  VALUES (04) , 
 PARTITION "PART05"  VALUES (05) , 
 PARTITION "PART06"  VALUES (06) , 
 PARTITION "PART07"  VALUES (07) , 
 PARTITION "PART08"  VALUES (08) , 
 PARTITION "PART09"  VALUES (09) , 
 PARTITION "PART10"  VALUES (10) , 
 PARTITION "PART11"  VALUES (11) , 
 PARTITION "PART12"  VALUES (12) , 
 PARTITION "PART13"  VALUES (13) , 
 PARTITION "PART14"  VALUES (14) , 
 PARTITION "PART15"  VALUES (15) , 
 PARTITION "PART16"  VALUES (16) , 
 PARTITION "PART17"  VALUES (17) , 
 PARTITION "PART18"  VALUES (18) , 
 PARTITION "PART19"  VALUES (19) , 
 PARTITION "PART20"  VALUES (20) , 
 PARTITION "PART21"  VALUES (21) , 
 PARTITION "PART22"  VALUES (22) , 
 PARTITION "PART23"  VALUES (23) , 
 PARTITION "PART24"  VALUES (24) , 
 PARTITION "PART25"  VALUES (25) , 
 PARTITION "PART26"  VALUES (26) , 
 PARTITION "PART27"  VALUES (27) , 
 PARTITION "PART28"  VALUES (28) , 
 PARTITION "PART29"  VALUES (29) , 
 PARTITION "PART30"  VALUES (30) , 
 PARTITION "PART31"  VALUES (31) , 
 PARTITION "PART32"  VALUES (32) , 
 PARTITION "PART33"  VALUES (33) , 
 PARTITION "PART34"  VALUES (34) , 
 PARTITION "PART35"  VALUES (35) , 
 PARTITION "PART36"  VALUES (36) , 
 PARTITION "PART37"  VALUES (37) , 
 PARTITION "PART38"  VALUES (38) , 
 PARTITION "PART39"  VALUES (39) , 
 PARTITION "PART40"  VALUES (40) , 
 PARTITION "PART41"  VALUES (41) , 
 PARTITION "PART42"  VALUES (42) , 
 PARTITION "PART43"  VALUES (43) , 
 PARTITION "PART44"  VALUES (44) , 
 PARTITION "PART45"  VALUES (45) , 
 PARTITION "PART46"  VALUES (46) , 
 PARTITION "PART47"  VALUES (47) , 
 PARTITION "PART48"  VALUES (48) , 
 PARTITION "PART49"  VALUES (49) , 
 PARTITION "PART50"  VALUES (50) , 
 PARTITION "PART51"  VALUES (51) , 
 PARTITION "PART52"  VALUES (52) , 
 PARTITION "PART53"  VALUES (53) , 
 PARTITION "PART54"  VALUES (54) , 
 PARTITION "PART55"  VALUES (55) , 
 PARTITION "PART56"  VALUES (56) , 
 PARTITION "PART57"  VALUES (57) , 
 PARTITION "PART58"  VALUES (58) , 
 PARTITION "PART59"  VALUES (59) , 
 PARTITION "PART60"  VALUES (60) , 
 PARTITION "PART61"  VALUES (61) , 
 PARTITION "PART62"  VALUES (62) , 
 PARTITION "PART63"  VALUES (63) , 
 PARTITION "PART64"  VALUES (64) , 
 PARTITION "PART65"  VALUES (65) , 
 PARTITION "PART66"  VALUES (66) , 
 PARTITION "PART67"  VALUES (67) , 
 PARTITION "PART68"  VALUES (68) , 
 PARTITION "PART69"  VALUES (69) , 
 PARTITION "PART70"  VALUES (70) , 
 PARTITION "PART71"  VALUES (71) , 
 PARTITION "PART72"  VALUES (72) , 
 PARTITION "PART73"  VALUES (73) , 
 PARTITION "PART74"  VALUES (74) , 
 PARTITION "PART75"  VALUES (75) , 
 PARTITION "PART76"  VALUES (76) , 
 PARTITION "PART77"  VALUES (77) , 
 PARTITION "PART78"  VALUES (78) , 
 PARTITION "PART79"  VALUES (79) , 
 PARTITION "PART80"  VALUES (80) , 
 PARTITION "PART81"  VALUES (81) , 
 PARTITION "PART82"  VALUES (82) , 
 PARTITION "PART83"  VALUES (83) , 
 PARTITION "PART84"  VALUES (84) , 
 PARTITION "PART85"  VALUES (85) , 
 PARTITION "PART86"  VALUES (86) , 
 PARTITION "PART87"  VALUES (87) , 
 PARTITION "PART88"  VALUES (88) , 
 PARTITION "PART89"  VALUES (89) , 
 PARTITION "PART90"  VALUES (90) , 
 PARTITION "PART91"  VALUES (91) , 
 PARTITION "PART92"  VALUES (92) , 
 PARTITION "PART93"  VALUES (93) , 
 PARTITION "PART94"  VALUES (94) , 
 PARTITION "PART95"  VALUES (95) , 
 PARTITION "PART96"  VALUES (96) , 
 PARTITION "PART97"  VALUES (97) , 
 PARTITION "PART98"  VALUES (98) , 
 PARTITION "PART99"  VALUES (99) ) ;

   COMMENT ON COLUMN "AIS_TUSERDIY"."USERDIY_ID" IS '自定义语音编号';
   COMMENT ON COLUMN "AIS_TUSERDIY"."USER_ID" IS '用户编码';
   COMMENT ON COLUMN "AIS_TUSERDIY"."CONTENT_TYPE" IS '语音类型';
   COMMENT ON COLUMN "AIS_TUSERDIY"."CONTENT_DETAIL" IS '语音内容';
   COMMENT ON COLUMN "AIS_TUSERDIY"."FILE_PATH" IS '文件路径';
   COMMENT ON COLUMN "AIS_TUSERDIY"."FILE_NAME" IS '文件名';
   COMMENT ON COLUMN "AIS_TUSERDIY"."STATE" IS '状态(0有效/1无效)';
   COMMENT ON COLUMN "AIS_TUSERDIY"."CREATE_TIME" IS '创建时间';
   COMMENT ON COLUMN "AIS_TUSERDIY"."PARTITION_ID" IS '分区编号';
   COMMENT ON TABLE "AIS_TUSERDIY"  IS '用户自定义语音';
--------------------------------------------------------
--  DDL for Table AUTH_RES_PERM
--------------------------------------------------------

  CREATE TABLE "AUTH_RES_PERM" 
   (	"ARP_ID" VARCHAR2(20 BYTE), 
	"ARP_RES_ACCESS_URL" VARCHAR2(255 BYTE), 
	"ARP_PERM_CODE" VARCHAR2(120 BYTE), 
	"ARP_PERM_TYPE" VARCHAR2(5 BYTE), 
	"ARP_PERM_FINAL_NODE" VARCHAR2(2 BYTE), 
	"ARP_PERM_NAME" VARCHAR2(120 BYTE), 
	"ARP_PERM_REMARK" CLOB, 
	"ARP_PERM_ORDER" NUMBER, 
	"ARP_VALID_FLAG" VARCHAR2(1 BYTE), 
	"ARP_PARENT_ID" VARCHAR2(20 BYTE), 
	"ARP_REG_USER" VARCHAR2(20 BYTE), 
	"ARP_REG_DATE" VARCHAR2(14 BYTE), 
	"ARP_EDIT_USER" VARCHAR2(20 BYTE), 
	"ARP_EDIT_DATE" VARCHAR2(14 BYTE)
   ) ;

   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_RES_ACCESS_URL" IS '资源访问路径(权限类型为MENU时，为中间节点时，此项为空值，否点做树菜单时，点击出错）';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_CODE" IS '权限CODE';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_TYPE" IS '权限类型（1：菜单权限[MENU]；2：操作权限[OPERATION]；3：页面元素可以性[ELEMENT]；）';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_FINAL_NODE" IS '是否为最终节点';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_NAME" IS '权限名称';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_REMARK" IS '权限描述';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PERM_ORDER" IS '排序值（值越大，先显示）';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_VALID_FLAG" IS '有效标识';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_PARENT_ID" IS '父主键   自关联主键';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_REG_USER" IS '创建者';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_REG_DATE" IS '创建日期';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_EDIT_USER" IS '编辑者';
   COMMENT ON COLUMN "AUTH_RES_PERM"."ARP_EDIT_DATE" IS '编辑日期';
--------------------------------------------------------
--  DDL for Table AUTH_ROLE
--------------------------------------------------------

  CREATE TABLE "AUTH_ROLE" 
   (	"ARO_ID" VARCHAR2(20 BYTE), 
	"ARO_NAME" VARCHAR2(120 BYTE), 
	"ARO_REMARK" CLOB, 
	"ARO_PARENT_ID" VARCHAR2(20 BYTE), 
	"ARO_VALID_FLAG" VARCHAR2(1 BYTE), 
	"ARO_REG_USER" VARCHAR2(20 BYTE), 
	"ARO_REG_DATE" VARCHAR2(14 BYTE), 
	"ARO_EDIT_USER" VARCHAR2(20 BYTE), 
	"ARO_EDIT_DATE" VARCHAR2(14 BYTE)
   ) ;

   COMMENT ON COLUMN "AUTH_ROLE"."ARO_ID" IS '主键';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_NAME" IS '角色名称';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_REMARK" IS '备注';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_PARENT_ID" IS '角色父ID树';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_VALID_FLAG" IS '有效标识(0：无效；1：有效)';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_REG_USER" IS '创建者';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_REG_DATE" IS '创建日期';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_EDIT_USER" IS '编辑者';
   COMMENT ON COLUMN "AUTH_ROLE"."ARO_EDIT_DATE" IS '编辑日期';
--------------------------------------------------------
--  DDL for Table AUTH_ROLE_RES_PERM
--------------------------------------------------------

  CREATE TABLE "AUTH_ROLE_RES_PERM" 
   (	"ARRP_ID" VARCHAR2(20 BYTE), 
	"ARRP_ARO_ID" VARCHAR2(20 BYTE), 
	"ARRP_ARP_ID" VARCHAR2(20 BYTE), 
	"ARRP_EDIT_USER" VARCHAR2(20 BYTE), 
	"ARRP_EDIT_DATE" VARCHAR2(14 BYTE)
   ) ;

   COMMENT ON COLUMN "AUTH_ROLE_RES_PERM"."ARRP_ID" IS '主键';
   COMMENT ON COLUMN "AUTH_ROLE_RES_PERM"."ARRP_ARO_ID" IS '角色主键';
   COMMENT ON COLUMN "AUTH_ROLE_RES_PERM"."ARRP_ARP_ID" IS '资源权限主键';
   COMMENT ON COLUMN "AUTH_ROLE_RES_PERM"."ARRP_EDIT_USER" IS '编辑者';
   COMMENT ON COLUMN "AUTH_ROLE_RES_PERM"."ARRP_EDIT_DATE" IS '编辑日期';
--------------------------------------------------------
--  DDL for Table AUTH_USER
--------------------------------------------------------

  CREATE TABLE "AUTH_USER" 
   (	"AU_ID" VARCHAR2(20 BYTE), 
	"AU_LOGIN_NAME" VARCHAR2(120 BYTE), 
	"AU_PASSWORD" NVARCHAR2(50), 
	"AU_REMARK" CLOB, 
	"AU_VALID_FLAG" VARCHAR2(1 BYTE), 
	"AU_NAME" VARCHAR2(20 BYTE), 
	"AU_MOBILE" VARCHAR2(20 BYTE), 
	"AU_EMAIL" VARCHAR2(120 BYTE), 
	"AU_DEPART" VARCHAR2(20 BYTE), 
	"AU_POSITION" VARCHAR2(20 BYTE), 
	"AU_REG_USER" VARCHAR2(20 BYTE), 
	"AU_REG_DATE" VARCHAR2(14 BYTE), 
	"AU_EDIT_USER" VARCHAR2(20 BYTE), 
	"AU_EDIT_DATE" VARCHAR2(14 BYTE), 
	"MERCHANT_CODE" VARCHAR2(20 BYTE)
   ) ;

   COMMENT ON COLUMN "AUTH_USER"."AU_ID" IS '主键';
   COMMENT ON COLUMN "AUTH_USER"."AU_LOGIN_NAME" IS '登录用户名';
   COMMENT ON COLUMN "AUTH_USER"."AU_PASSWORD" IS '密码';
   COMMENT ON COLUMN "AUTH_USER"."AU_REMARK" IS '备注';
   COMMENT ON COLUMN "AUTH_USER"."AU_VALID_FLAG" IS '0：无效；1：有效';
   COMMENT ON COLUMN "AUTH_USER"."AU_NAME" IS '姓名';
   COMMENT ON COLUMN "AUTH_USER"."AU_MOBILE" IS '联系电话';
   COMMENT ON COLUMN "AUTH_USER"."AU_EMAIL" IS '邮箱';
   COMMENT ON COLUMN "AUTH_USER"."AU_DEPART" IS '部门';
   COMMENT ON COLUMN "AUTH_USER"."AU_POSITION" IS '职位(根据部门显示不同职位)';
   COMMENT ON COLUMN "AUTH_USER"."AU_REG_USER" IS '创建者';
   COMMENT ON COLUMN "AUTH_USER"."AU_REG_DATE" IS '创建日期';
   COMMENT ON COLUMN "AUTH_USER"."AU_EDIT_USER" IS '编辑者';
   COMMENT ON COLUMN "AUTH_USER"."AU_EDIT_DATE" IS '编辑日期';
   COMMENT ON COLUMN "AUTH_USER"."MERCHANT_CODE" IS '商户编号';
--------------------------------------------------------
--  DDL for Table AUTH_USER_ROLE
--------------------------------------------------------

  CREATE TABLE "AUTH_USER_ROLE" 
   (	"AUR_ID" VARCHAR2(20 BYTE), 
	"AUR_AU_ID" VARCHAR2(20 BYTE), 
	"AUR_ARO_ID" VARCHAR2(20 BYTE), 
	"AUR_VALID_FLAG" VARCHAR2(1 BYTE), 
	"AUR_REG_USER" VARCHAR2(20 BYTE), 
	"AUR_REG_DATE" VARCHAR2(14 BYTE), 
	"AUR_EDIT_USER" VARCHAR2(20 BYTE), 
	"AUR_EDIT_DATE" VARCHAR2(14 BYTE)
   ) ;

   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_ID" IS '主键';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_AU_ID" IS '用户主键';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_ARO_ID" IS '角色主键';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_VALID_FLAG" IS '有效标识';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_REG_USER" IS '创建者';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_REG_DATE" IS '创建日期';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_EDIT_USER" IS '编辑者';
   COMMENT ON COLUMN "AUTH_USER_ROLE"."AUR_EDIT_DATE" IS '编辑日期';
--------------------------------------------------------
--  DDL for Table SMS_HISTORY
--------------------------------------------------------

  CREATE TABLE "SMS_HISTORY" 
   (	"CONTENT" VARCHAR2(512 BYTE), 
	"CREATE_TIME" DATE
   ) ;
--------------------------------------------------------
--  DDL for View AISWEB_VOWNERPOWER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AISWEB_VOWNERPOWER" ("USER_ID", "USER_NAME", "USER_GROUPID", "IS_LOCKED", "USER_STATE", "URL_PATH", "ACTIVE_TYPE", "POWER_GROUPID", "POWER_ID", "POWER_NAME", "CREATE_USERID", "GRANT_OPTION") AS 
  SELECT
        aisweb_tuser.user_id,
        aisweb_tuser.user_name,
        aisweb_tuser.user_groupid,
        aisweb_tuser.is_locked,
        aisweb_tuser.user_state,
        aisweb_tpower.url_path,
        aisweb_tpower.active_type,
        aisweb_tpower.power_groupid,
        aisweb_tpower.power_id,
        aisweb_tpower.power_name,
        aisweb_tgrant.create_userid,
        aisweb_tgrant.grant_option
    FROM
        aisweb_tgrant,
        aisweb_tpower,
        aisweb_tuser
    WHERE
        aisweb_tgrant.power_id = aisweb_tpower.power_id
        AND aisweb_tgrant.user_id = aisweb_tuser.user_id
        AND aisweb_tgrant.user_groupid = aisweb_tuser.user_groupid
        AND ( nvl(sys_context('AISWEB', 'userid'), 1) = 1
              OR aisweb_tuser.user_id = sys_context('AISWEB', 'userid') )
;
--------------------------------------------------------
--  DDL for View AIS_VACCOUNT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VACCOUNT" ("TACT_ID", "ACCOUNT_NAME", "ACCOUNT_PWD", "ACCOUNT_STATE", "CUSTOMER_ID", "REMARKS", "CREATER_ID", "CREATE_TIME") AS 
  SELECT "TACT_ID","ACCOUNT_NAME","ACCOUNT_PWD","ACCOUNT_STATE","CUSTOMER_ID","REMARKS","CREATER_ID","CREATE_TIME"
     FROM AIS_TACCOUNT
;
--------------------------------------------------------
--  DDL for View AIS_VASSISTANT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VASSISTANT" ("ASSISTANT_ID", "USER_ID", "USER_SURNAME", "USER_SURNAME_PY", "USER_APPELLATION", "USER_APPELLATION_PY", "SOUNDER_ID", "CREATE_TIME", "PARTITION_ID", "IS_VALID") AS 
  SELECT "ASSISTANT_ID","USER_ID","USER_SURNAME","USER_SURNAME_PY","USER_APPELLATION","USER_APPELLATION_PY","SOUNDER_ID","CREATE_TIME","PARTITION_ID","IS_VALID"   FROM AIS_TASSISTANT
;
--------------------------------------------------------
--  DDL for View AIS_VASSISTANT_VOICES
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VASSISTANT_VOICES" ("VOICE_ID", "VOICE_TYPE", "VOICE_PINYIN", "CREATE_TIME", "VOICE_NAME") AS 
  select "VOICE_ID","VOICE_TYPE","VOICE_PINYIN","CREATE_TIME","VOICE_NAME" from AIS_TASSISTANT_VOICES
;
--------------------------------------------------------
--  DDL for View AIS_VAUDIT_TRIES_LIMIT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VAUDIT_TRIES_LIMIT" ("AUDIT_ID", "TODR_ID", "CYCLY_TYPE", "CYCLY_VALUE", "LIMIT_TIMES", "CREATE_TIME", "VALID_TIME", "INVALID_TIME", "CREATER_ID", "REMARKS") AS 
  select "AUDIT_ID","TODR_ID","CYCLY_TYPE","CYCLY_VALUE","LIMIT_TIMES","CREATE_TIME","VALID_TIME","INVALID_TIME","CREATER_ID","REMARKS" from AIS_TAUDIT_TRIES_LIMIT
;
--------------------------------------------------------
--  DDL for View AIS_VBILL
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VBILL" ("TBL_ID", "BILL_NAME") AS 
  SELECT TBL_ID, BILL_NAME FROM AIS_TBILL
;
--------------------------------------------------------
--  DDL for View AIS_VBLACKER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VBLACKER" ("TB_ID", "PHONE_NBR", "USER_ID", "CUSTOMER_ID", "CREATE_TIME", "PARTITION_ID", "VALID_STATE") AS 
  SELECT TB_ID,
          PHONE_NBR,
          USER_ID,
          CUSTOMER_ID,
          CREATE_TIME,
          PARTITION_ID,
          VALID_STATE
     FROM AIS_TBLACKER
;
--------------------------------------------------------
--  DDL for View AIS_VBUSINESS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VBUSINESS" ("TCTR_ID", "CUSTOMER_NAME", "CUSTOMER_TYPE", "IS_TRANS", "IS_ORDER", "IS_NOTIFY", "IS_PUSH", "MANAGER_ID", "LINK_MAN", "REMARKS", "CREATE_ID", "CREATE_TIME", "PUSH_URL") AS 
  SELECT "TCTR_ID","CUSTOMER_NAME","CUSTOMER_TYPE","IS_TRANS","IS_ORDER","IS_NOTIFY","IS_PUSH","MANAGER_ID","LINK_MAN","REMARKS","CREATE_ID","CREATE_TIME","PUSH_URL"
     FROM AIS_TBUSINESS
;
--------------------------------------------------------
--  DDL for View AIS_VCALLIN
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCALLIN" ("TASKID", "CALLEDNUMBER", "CALLERNUMBER", "ORICALLEDNUMBER", "STARTTIME", "ENDTIME", "FILENAME", "CUSTOMER_ID", "UUID", "USER_ID") AS 
  SELECT TASKID,
          CALLEDNUMBER,
          CALLERNUMBER,
          ORICALLEDNUMBER,
          STARTTIME,
          ENDTIME,
          FILENAME,
          CUSTOMERID AS CUSTOMER_ID,
          RESERVE4 AS UUID,
          RESERVE1 AS USER_ID
     FROM yhzl.INCOMINGCALLS
;
--------------------------------------------------------
--  DDL for View AIS_VCALLINS_COLLECT_MONTH
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCALLINS_COLLECT_MONTH" ("USER_ID", "CUSTOMERID", "ORICALLEDNUMBER", "PARTITION_ID", "MIN_UUID", "MAX_UUID", "RECORD_COUNT") AS 
  select "USER_ID","CUSTOMERID","ORICALLEDNUMBER","PARTITION_ID","MIN_UUID","MAX_UUID","RECORD_COUNT" from realreport.CALLINS_COLLECT_MONTH
;
--------------------------------------------------------
--  DDL for View AIS_VCALLIN_CONTENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCALLIN_CONTENT" ("TASKID", "CALLEDNUMBER", "CALLERNUMBER", "ORICALLEDNUMBER", "STARTTIME", "ENDTIME", "FILENAME", "CUSTOMER_ID", "UUID", "USER_ID", "SERIALNUM", "TYPE", "TIME", "CONTENT", "CONTENT_CLASS", "RESULT", "KEYWORD", "RESERVE1", "RESERVE2", "RESERVE3", "RESERVE4", "RESERVE5") AS 
  SELECT
        a.taskid,
        a.callednumber,
        a.callernumber,
        a.oricallednumber,
        a.starttime,
        a.endtime,
        a.filename,
        a.customer_id,
        a.uuid,
        a.user_id,
        b.serialnum,
        b.type,
        b.time,
        b.content,
        b.content_class,
        b.result,
        b.keyword,
        b.reserve1,
        b.reserve2,
        b.reserve3,
        b.reserve4,
        b.reserve5
    FROM
        ais_vcallin    a,
        ais_vcontent   b
    WHERE
        a.taskid = b.taskid(+)
;
--------------------------------------------------------
--  DDL for View AIS_VCHECKPOINT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCHECKPOINT" ("VOICE_CODE", "FLOW_NODE", "CONTENT", "CREATE_TIME", "CONTENT_CLASS", "RATE_ID", "CHECKPOINT_ID") AS 
  SELECT "VOICE_CODE","FLOW_NODE","CONTENT","CREATE_TIME","CONTENT_CLASS","RATE_ID","CHECKPOINT_ID"
FROM AIS_TCHECKPOINT
;
--------------------------------------------------------
--  DDL for View AIS_VCITYLIST
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCITYLIST" ("TCL_ID", "CITY", "PROVINCE") AS 
  SELECT TCL_ID, CITY, PROVINCE FROM yhzl.ROBOT_TCITYLIST
;
--------------------------------------------------------
--  DDL for View AIS_VCODESEGMENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCODESEGMENT" ("CODE_SEGMENT", "OPERATOR", "TCL_ID") AS 
  SELECT CODE_SEGMENT, OPERATOR, TCL_ID FROM yhzl.ROBOT_TCODESEGMENT
;
--------------------------------------------------------
--  DDL for View AIS_VCONFIG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCONFIG" ("TCFG_ID", "CUSTOMER_ID", "CUSTOMER_NAME", "CUSTOMER_TYPE", "SERVICE_ID", "SERVICE_NAME", "BILL_ID", "BILL_UNIT", "BILL_TYPE", "BILL_STATE", "SMS_TOTLE", "PRICE", "VOLID_TIME", "INVOLID_TIME", "CREATER_ID", "CREATE_TIME") AS 
  SELECT
        tcfg_id,
        customer_id,
        customer_name,
        customer_type,
        service_id,
        service_name,
        bill_id,
        bill_unit,
        bill_type,
        bill_state,
        sms_totle,
        price,
        volid_time,
        involid_time,
        creater_id,
        create_time
    FROM
        ais_tconfig
;
--------------------------------------------------------
--  DDL for View AIS_VCONTENT
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCONTENT" ("TASKID", "SERIALNUM", "TYPE", "TIME", "CONTENT", "CONTENT_CLASS", "RESULT", "KEYWORD", "RESERVE1", "RESERVE2", "RESERVE3", "RESERVE4", "RESERVE5") AS 
  SELECT TASKID,
        SERIALNUM+1  SERIALNUM,
          TYPE,
          TIME,
          CONTENT,
          CLASS CONTENT_CLASS,
          RESULT,
          KEYWORD,
          RESERVE1,
          RESERVE2,
          RESERVE3,
          RESERVE4,
          RESERVE5
     FROM yhzl.INCOMINGCALLS_CONTENT
;
--------------------------------------------------------
--  DDL for View AIS_VCRONTORLOG
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VCRONTORLOG" ("TRQT_ID", "REQUEST_TYPE", "COLLECT_ID", "USER_ID", "CUSTOMER_ID", "CUSTOMER_NAME", "CUSTOMER_TYPE", "AREA_ID", "AREA", "PROVINCE", "IS_VOLID", "ERR_MSG", "CREATE_TIME", "PARTITION_ID") AS 
  SELECT TRQT_ID,
          REQUEST_TYPE,
          COLLECT_ID,
          USER_ID,
          CUSTOMER_ID,
          CUSTOMER_NAME,
          CUSTOMER_TYPE,
          AREA_ID,
          AREA,
          PROVINCE,
          IS_VOLID,
          ERR_MSG,
          CREATE_TIME,
          PARTITION_ID
     FROM AIS_TCRONTORLOG
;
--------------------------------------------------------
--  DDL for View AIS_VNOTIFY
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VNOTIFY" ("TASKID", "MOBILE", "MESSAGE", "CREATE_TIME") AS 
  SELECT TASKID,
          MOBILE,
          MESSAGE,
          CREATE_TIME
     FROM applyweb.ais_Tnotify
;
--------------------------------------------------------
--  DDL for View AIS_VORDER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VORDER" ("TODR_ID", "COLLECT_ID", "ORDER_TYPE", "USER_ID", "CONFIG_ID", "CUSTOMER_ID", "CUSTOMER_NAME", "CUSTOMER_TYPE", "SERVICE_ID", "SERVICE_NAME", "AREA_ID", "AREA", "PROVINCE", "BILL_ID", "BILL_UNIT", "BILL_TYPE", "SMS_TOTLE", "PRICE", "CHARGE", "IS_VOLID", "ERR_MSG", "CUSTOMER_ORDERID", "CREATE_TIME", "PARTITION_ID", "TRANS_USER_ID") AS 
  SELECT "TODR_ID","COLLECT_ID","ORDER_TYPE","USER_ID","CONFIG_ID","CUSTOMER_ID","CUSTOMER_NAME","CUSTOMER_TYPE","SERVICE_ID","SERVICE_NAME","AREA_ID","AREA","PROVINCE","BILL_ID","BILL_UNIT","BILL_TYPE","SMS_TOTLE","PRICE","CHARGE","IS_VOLID","ERR_MSG","CUSTOMER_ORDERID","CREATE_TIME","PARTITION_ID","TRANS_USER_ID"
     FROM AIS_TORDER
;
--------------------------------------------------------
--  DDL for View AIS_VORDERS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VORDERS" ("TCLT_ID", "USER_ID", "PHONE_NBR", "CUSTOMER_ID", "SERVICE_ID", "OPERATION_TYPE", "AREA_ID", "CONFIG_ID", "IS_WORKING", "SMS_TOTLE", "FIRST_ORDERTIME", "LAST_ORDERTIME", "PAUSE_ORDERTIME", "STOP_ORDERTIME", "PARTITION_ID") AS 
  SELECT "TCLT_ID","USER_ID","PHONE_NBR","CUSTOMER_ID","SERVICE_ID","OPERATION_TYPE","AREA_ID","CONFIG_ID","IS_WORKING","SMS_TOTLE","FIRST_ORDERTIME","LAST_ORDERTIME","PAUSE_ORDERTIME","STOP_ORDERTIME","PARTITION_ID"
     FROM AIS_TORDERS
;
--------------------------------------------------------
--  DDL for View AIS_VSERVICE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VSERVICE" ("TSVE_ID", "SERVICE_NAME", "REMARKS", "CREATER_ID", "CREATE_TIME") AS 
  SELECT TSVE_ID,
          SERVICE_NAME,
          REMARKS,
          CREATER_ID,
          CREATE_TIME
     FROM AIS_TSERVICE
;
--------------------------------------------------------
--  DDL for View AIS_VSMSTEMPLATE
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VSMSTEMPLATE" ("TEMPLATE_ID", "CONTENT_CLASS", "TEMPLATE_CONTENT", "STATUS", "CREATE_TIME", "SIGNER") AS 
  select "TEMPLATE_ID","CONTENT_CLASS","TEMPLATE_CONTENT","STATUS","CREATE_TIME","SIGNER" from ais_tsmsTemplate
;
--------------------------------------------------------
--  DDL for View AIS_VTOKEN
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VTOKEN" ("TTOK_ID", "CUSTOMER_ID", "TOKEN", "VALID_TIME", "INVALID_TIME", "KEEP_ACTIVITY", "CREATE_TIME") AS 
  SELECT TTOK_ID,
          CUSTOMER_ID,
          TOKEN,
          VALID_TIME,
          INVALID_TIME,
          KEEP_ACTIVITY,
          CREATE_TIME
     FROM AIS_TTOKEN
;
--------------------------------------------------------
--  DDL for View AIS_VUSER
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AIS_VUSER" ("USER_ID", "CUSTOMER_ID", "PHONE_NBR", "MAIL", "WX_NBR", "OPERATION_TYPE", "AREA_ID", "CREATE_TIME", "PARTITION_ID", "IS_TESTER", "USER_STATE") AS 
  SELECT
        "USER_ID","CUSTOMER_ID","PHONE_NBR","MAIL","WX_NBR","OPERATION_TYPE","AREA_ID","CREATE_TIME","PARTITION_ID","IS_TESTER","USER_STATE"
    FROM
        ais_tuser
;
--------------------------------------------------------
--  DDL for View AQ$CALLINS
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AQ$CALLINS" ("QUEUE", "MSG_ID", "CORR_ID", "MSG_PRIORITY", "MSG_STATE", "DELAY", "DELAY_TIMESTAMP", "EXPIRATION", "ENQ_TIME", "ENQ_TIMESTAMP", "ENQ_USER_ID", "ENQ_TXN_ID", "DEQ_TIME", "DEQ_TIMESTAMP", "DEQ_USER_ID", "DEQ_TXN_ID", "RETRY_COUNT", "EXCEPTION_QUEUE_OWNER", "EXCEPTION_QUEUE", "USER_DATA", "PROPAGATED_MSGID", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "ORIGINAL_MSGID", "ORIGINAL_QUEUE_NAME", "ORIGINAL_QUEUE_OWNER", "EXPIRATION_REASON", "CONSUMER_NAME", "ADDRESS", "PROTOCOL") AS 
  SELECT  q_name QUEUE, qt.msgid MSG_ID, corrid CORR_ID,  priority MSG_PRIORITY,  decode(s.subscriber_type,2,'UNDELIVERABLE',
                                             decode(h.dequeue_time, NULL,decode(l.dequeue_time, NULL, decode(state, 0,   'READY',	     
                              		                                          1,   'WAIT',	     
                                                                                  2,   'PROCESSED',	     
                                                                                  3,   'EXPIRED',
                                                                                  8,   'DEFERRED',
                                                                                 10,  'BUFFERED_EXPIRED'),(decode(l.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED'))), (decode(h.transaction_id, NULL, 'UNDELIVERABLE', 'PROCESSED')))
                          )                         MSG_STATE,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as date) delay,  cast(FROM_TZ(qt.delay, '00:00')
                 at time zone sessiontimezone as timestamp) DELAY_TIMESTAMP, expiration,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as date) enq_time,  cast(FROM_TZ(qt.enq_time, '00:00')
                 at time zone sessiontimezone as timestamp)
                 enq_timestamp,   enq_uid ENQ_USER_ID,  qt.enq_tid ENQ_TXN_ID,  decode(h.transaction_id, NULL, 
                 decode(l.transaction_id, NULL, TO_DATE(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as date)) DEQ_TIME,  decode(h.transaction_id, NULL, 
            decode(l.transaction_id, NULL, TO_TIMESTAMP(NULL), l.dequeue_time),
                        cast(FROM_TZ(h.dequeue_time, '00:00')
                 at time zone sessiontimezone as timestamp))
                 DEQ_TIMESTAMP,  decode(h.dequeue_user, NULL, l.dequeue_user, h.dequeue_user) 
	         DEQ_USER_ID,  decode(h.transaction_id, NULL, l.transaction_id, 
                 h.transaction_id) DEQ_TXN_ID,  h.retry_count retry_count,  decode (state, 0, exception_qschema, 
                                1, exception_qschema, 
                                2, exception_qschema,  
                                NULL) EXCEPTION_QUEUE_OWNER,  decode (state, 0, exception_queue, 
                                1, exception_queue, 
                                2, exception_queue,  
                                NULL) EXCEPTION_QUEUE,  user_data,  h.propagated_msgid PROPAGATED_MSGID,  sender_name  SENDER_NAME, sender_address  SENDER_ADDRESS, sender_protocol  SENDER_PROTOCOL, dequeue_msgid ORIGINAL_MSGID,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_queue, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_queue)),
                   decode (h.transaction_id, NULL, NULL, exception_queue)) 
                                ORIGINAL_QUEUE_NAME,  decode (h.dequeue_time, NULL, decode (l.dequeue_time, NULL,
                   decode (state, 3, exception_qschema, NULL), 
                   decode (l.transaction_id, NULL, NULL, exception_qschema)),
                   decode (h.transaction_id, NULL, NULL, exception_qschema)) 
                                ORIGINAL_QUEUE_OWNER,  decode(s.subscriber_type,2,
                                         'Messages to be cleaned up later',
                        decode(h.dequeue_time, NULL, 
                               decode(state, 3, 
                                           decode(h.transaction_id, NULL, 
                                           decode (expiration , NULL , 
                                                   'MAX_RETRY_EXCEEDED',
                                                   'TIME_EXPIRATION'),
                                                   'INVALID_TRANSACTION', NULL,
                                                   'MAX_RETRY_EXCEEDED'), NULL),
                                           decode(h.transaction_id, NULL, 
                                                 'PROPAGATION_FAILURE', NULL)))
                 EXPIRATION_REASON,  decode(h.subscriber#, 0, decode(h.name, '0', NULL,
							        h.name),
					  s.name) CONSUMER_NAME,  s.address ADDRESS,  s.protocol PROTOCOL  FROM "CALLINS" qt, "AQ$_CALLINS_H" h LEFT OUTER JOIN "AQ$_CALLINS_L" l  ON h.msgid = l.msgid AND h.subscriber# = l.subscriber# AND h.name = l.name AND h.address# = l.address#, "AQ$_CALLINS_S" s  WHERE  qt.msgid = h.msgid AND  ((h.subscriber# != 0 AND h.subscriber# = s.subscriber_id)  OR (h.subscriber# = 0 AND h.address# = s.subscriber_id)) AND (qt.state != 7 OR   qt.state != 9 )     WITH READ ONLY
;
--------------------------------------------------------
--  DDL for View AQ$CALLINS_R
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AQ$CALLINS_R" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "RULE", "RULE_SET", "TRANSFORMATION") AS 
  SELECT queue_name QUEUE, s.name NAME , address ADDRESS , protocol PROTOCOL, rule_condition RULE, ruleset_name RULE_SET, trans_name TRANSFORMATION  FROM "AQ$_CALLINS_S" s , sys.all_rules r WHERE (bitand(s.subscriber_type, 1) = 1) AND s.rule_name = r.rule_name and r.rule_owner = 'APPLYWEB'  WITH READ ONLY
;
--------------------------------------------------------
--  DDL for View AQ$CALLINS_S
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AQ$CALLINS_S" ("QUEUE", "NAME", "ADDRESS", "PROTOCOL", "TRANSFORMATION", "QUEUE_TO_QUEUE") AS 
  SELECT queue_name QUEUE, name NAME , address ADDRESS , protocol PROTOCOL, trans_name TRANSFORMATION, decode(bitand(SUBSCRIBER_TYPE, 512), 512, 'TRUE', 'FALSE') QUEUE_TO_QUEUE  FROM "AQ$_CALLINS_S" s  WHERE (bitand(s.subscriber_type, 1) = 1)  WITH READ ONLY
;
--------------------------------------------------------
--  DDL for View AQ$_CALLINS_F
--------------------------------------------------------

  CREATE OR REPLACE FORCE VIEW "AQ$_CALLINS_F" ("Q_NAME", "ROW_ID", "MSGID", "CORRID", "PRIORITY", "STATE", "DELAY", "EXPIRATION", "ENQ_TIME", "ENQ_UID", "ENQ_TID", "DEQ_TIME", "DEQ_UID", "DEQ_TID", "RETRY_COUNT", "EXCEPTION_QSCHEMA", "EXCEPTION_QUEUE", "CSCN", "DSCN", "CHAIN_NO", "LOCAL_ORDER_NO", "TIME_MANAGER_INFO", "STEP_NO", "USER_DATA", "SENDER_NAME", "SENDER_ADDRESS", "SENDER_PROTOCOL", "DEQUEUE_MSGID", "DELIVERY_MODE", "SEQUENCE_NUM", "MSG_NUM", "QUEUE_ID", "USER_PROP", "SUBSCRIBER_ID", "SUBSCRIBER_NAME", "QUEUE_EVTID") AS 
  SELECT  /*+ NO_MERGE (qo) USE_NL(iot) */ qt.q_name Q_NAME, qt.rowid ROW_ID, qt.msgid MSGID, qt.corrid CORRID, qt.priority PRIORITY, qt.state STATE, cast(FROM_TZ(qt.delay, '00:00') at time zone sessiontimezone as timestamp) DELAY, qt.expiration EXPIRATION, cast(FROM_TZ(qt.enq_time, '00:00') at time zone sessiontimezone as timestamp) ENQ_TIME, qt.enq_uid ENQ_UID, qt.enq_tid ENQ_TID, cast(FROM_TZ(qt.deq_time, '00:00') at time zone sessiontimezone as timestamp) DEQ_TIME, qt.deq_uid DEQ_UID, qt.deq_tid DEQ_TID, qt.retry_count RETRY_COUNT, qt.exception_qschema EXCEPTION_QSCHEMA, qt.exception_queue EXCEPTION_QUEUE, qt.cscn CSCN, qt.dscn DSCN, qt.chain_no CHAIN_NO, qt.local_order_no LOCAL_ORDER_NO, cast(FROM_TZ(qt.time_manager_info, '00:00') at time zone sessiontimezone as timestamp)   TIME_MANAGER_INFO, qt.step_no STEP_NO, qt.user_data USER_DATA, qt.sender_name SENDER_NAME, qt.sender_address SENDER_ADDRESS, qt.sender_protocol SENDER_PROTOCOL, qt.dequeue_msgid DEQUEUE_MSGID, 'PERSISTENT' DELIVERY_MODE, 0 SEQUENCE_NUM, 0 MSG_NUM, qo.qid QUEUE_ID, qt.user_prop USER_PROP, iot.subscriber# SUBSCRIBER_ID, iot.name SUBSCRIBER_NAME, iot.queue# QUEUE_EVTID FROM "CALLINS" qt, "AQ$_CALLINS_I" iot, SYS.ALL_INT_DEQUEUE_QUEUES qo WHERE qt.msgid=iot.msgid  and qt.q_name = qo.name  AND qo.owner = 'APPLYWEB' AND iot.msg_enq_time = qt.enq_time AND  iot.msg_step_no = qt.step_no AND iot.msg_local_order_no = qt.local_order_no AND   iot.msg_chain_no = qt.chain_no  WITH READ ONLY
;
--------------------------------------------------------
--  DDL for Index PK_AIS_TBUSINESS
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TBUSINESS" ON "AIS_TBUSINESS" ("TCTR_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TACCOUNT
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TACCOUNT" ON "AIS_TACCOUNT" ("TACT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TUSERDIY
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TUSERDIY" ON "AIS_TUSERDIY" ("USERDIY_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TBLACKER
--------------------------------------------------------

  CREATE INDEX "PK_AIS_TBLACKER" ON "AIS_TBLACKER" ("TB_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index AIS_TCHECKPOINT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "AIS_TCHECKPOINT_PK" ON "AIS_TCHECKPOINT" ("CHECKPOINT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_ASSISTANT
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_ASSISTANT" ON "AIS_TASSISTANT" ("ASSISTANT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TCONFIG
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TCONFIG" ON "AIS_TCONFIG" ("TCFG_ID") 
  ;
--------------------------------------------------------
--  DDL for Index ARO_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "ARO_ID" ON "AUTH_ROLE" ("ARO_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AIS_TUSERDIY_USERID
--------------------------------------------------------

  CREATE INDEX "AIS_TUSERDIY_USERID" ON "AIS_TUSERDIY" ("USER_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TTOKEN
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TTOKEN" ON "AIS_TTOKEN" ("TTOK_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AIS_TUSER_UNPHONE
--------------------------------------------------------

  CREATE INDEX "AIS_TUSER_UNPHONE" ON "AIS_TUSER" ("PARTITION_ID", "PHONE_NBR", "CUSTOMER_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index AIS_TASSISTANT_USERID
--------------------------------------------------------

  CREATE INDEX "AIS_TASSISTANT_USERID" ON "AIS_TASSISTANT" ("USER_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index ARRP_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "ARRP_ID" ON "AUTH_ROLE_RES_PERM" ("ARRP_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AUR_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "AUR_ID" ON "AUTH_USER_ROLE" ("AUR_ID") 
  ;
--------------------------------------------------------
--  DDL for Index ARP_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "ARP_ID" ON "AUTH_RES_PERM" ("ARP_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TCRONTORLOG
--------------------------------------------------------

  CREATE INDEX "PK_AIS_TCRONTORLOG" ON "AIS_TCRONTORLOG" ("TRQT_ID") 
   LOCAL
 (PARTITION "PART201901" , 
 PARTITION "PART201902" , 
 PARTITION "PART201903" , 
 PARTITION "PART201904" , 
 PARTITION "PART201905" , 
 PARTITION "PART201906" , 
 PARTITION "PART201907" , 
 PARTITION "PART201908" , 
 PARTITION "PART201909" , 
 PARTITION "PART201910" , 
 PARTITION "PART201911" , 
 PARTITION "PART201912" , 
 PARTITION "PART202001" , 
 PARTITION "PART202002" , 
 PARTITION "PART202003" , 
 PARTITION "PART202004" , 
 PARTITION "PART202005" , 
 PARTITION "PART202006" , 
 PARTITION "PART202007" , 
 PARTITION "PART202008" , 
 PARTITION "PART202009" , 
 PARTITION "PART202010" , 
 PARTITION "PART202011" , 
 PARTITION "PART202012" , 
 PARTITION "PART202101" , 
 PARTITION "PART202102" , 
 PARTITION "PART202103" , 
 PARTITION "PART202104" , 
 PARTITION "PART202105" , 
 PARTITION "PART202106" , 
 PARTITION "PART202107" , 
 PARTITION "PART202108" , 
 PARTITION "PART202109" , 
 PARTITION "PART202110" , 
 PARTITION "PART202111" , 
 PARTITION "PART202112" ) ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TBILL
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TBILL" ON "AIS_TBILL" ("TBL_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TUSER
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TUSER" ON "AIS_TUSER" ("USER_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AIS_TAUDIT_TRIES_LIMIT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "AIS_TAUDIT_TRIES_LIMIT_PK" ON "AIS_TAUDIT_TRIES_LIMIT" ("AUDIT_ID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TSERVICE
--------------------------------------------------------

  CREATE UNIQUE INDEX "PK_AIS_TSERVICE" ON "AIS_TSERVICE" ("TSVE_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AU_ID
--------------------------------------------------------

  CREATE UNIQUE INDEX "AU_ID" ON "AUTH_USER" ("AU_ID") 
  ;
--------------------------------------------------------
--  DDL for Index AIS_TORDERS_UN
--------------------------------------------------------

  CREATE UNIQUE INDEX "AIS_TORDERS_UN" ON "AIS_TORDERS" ("USER_ID", "SERVICE_ID", "PARTITION_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index AIS_TNOTIFY_TID
--------------------------------------------------------

  CREATE UNIQUE INDEX "AIS_TNOTIFY_TID" ON "AIS_TNOTIFY" ("TASKID") 
  ;
--------------------------------------------------------
--  DDL for Index PK_AIS_TORDERS
--------------------------------------------------------

  CREATE INDEX "PK_AIS_TORDERS" ON "AIS_TORDERS" ("TCLT_ID") 
   LOCAL
 (PARTITION "PART00" , 
 PARTITION "PART01" , 
 PARTITION "PART02" , 
 PARTITION "PART03" , 
 PARTITION "PART04" , 
 PARTITION "PART05" , 
 PARTITION "PART06" , 
 PARTITION "PART07" , 
 PARTITION "PART08" , 
 PARTITION "PART09" , 
 PARTITION "PART10" , 
 PARTITION "PART11" , 
 PARTITION "PART12" , 
 PARTITION "PART13" , 
 PARTITION "PART14" , 
 PARTITION "PART15" , 
 PARTITION "PART16" , 
 PARTITION "PART17" , 
 PARTITION "PART18" , 
 PARTITION "PART19" , 
 PARTITION "PART20" , 
 PARTITION "PART21" , 
 PARTITION "PART22" , 
 PARTITION "PART23" , 
 PARTITION "PART24" , 
 PARTITION "PART25" , 
 PARTITION "PART26" , 
 PARTITION "PART27" , 
 PARTITION "PART28" , 
 PARTITION "PART29" , 
 PARTITION "PART30" , 
 PARTITION "PART31" , 
 PARTITION "PART32" , 
 PARTITION "PART33" , 
 PARTITION "PART34" , 
 PARTITION "PART35" , 
 PARTITION "PART36" , 
 PARTITION "PART37" , 
 PARTITION "PART38" , 
 PARTITION "PART39" , 
 PARTITION "PART40" , 
 PARTITION "PART41" , 
 PARTITION "PART42" , 
 PARTITION "PART43" , 
 PARTITION "PART44" , 
 PARTITION "PART45" , 
 PARTITION "PART46" , 
 PARTITION "PART47" , 
 PARTITION "PART48" , 
 PARTITION "PART49" , 
 PARTITION "PART50" , 
 PARTITION "PART51" , 
 PARTITION "PART52" , 
 PARTITION "PART53" , 
 PARTITION "PART54" , 
 PARTITION "PART55" , 
 PARTITION "PART56" , 
 PARTITION "PART57" , 
 PARTITION "PART58" , 
 PARTITION "PART59" , 
 PARTITION "PART60" , 
 PARTITION "PART61" , 
 PARTITION "PART62" , 
 PARTITION "PART63" , 
 PARTITION "PART64" , 
 PARTITION "PART65" , 
 PARTITION "PART66" , 
 PARTITION "PART67" , 
 PARTITION "PART68" , 
 PARTITION "PART69" , 
 PARTITION "PART70" , 
 PARTITION "PART71" , 
 PARTITION "PART72" , 
 PARTITION "PART73" , 
 PARTITION "PART74" , 
 PARTITION "PART75" , 
 PARTITION "PART76" , 
 PARTITION "PART77" , 
 PARTITION "PART78" , 
 PARTITION "PART79" , 
 PARTITION "PART80" , 
 PARTITION "PART81" , 
 PARTITION "PART82" , 
 PARTITION "PART83" , 
 PARTITION "PART84" , 
 PARTITION "PART85" , 
 PARTITION "PART86" , 
 PARTITION "PART87" , 
 PARTITION "PART88" , 
 PARTITION "PART89" , 
 PARTITION "PART90" , 
 PARTITION "PART91" , 
 PARTITION "PART92" , 
 PARTITION "PART93" , 
 PARTITION "PART94" , 
 PARTITION "PART95" , 
 PARTITION "PART96" , 
 PARTITION "PART97" , 
 PARTITION "PART98" , 
 PARTITION "PART99" ) ;
--------------------------------------------------------
--  DDL for Index AIS_TORDER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "AIS_TORDER_PK" ON "AIS_TORDER" ("TODR_ID", "PARTITION_ID") 
  ;
--------------------------------------------------------
--  DDL for Procedure GETCALLINDATA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "GETCALLINDATA" (
    batchsize   NUMBER,
    o_callins   OUT SYS_REFCURSOR
) IS
    v_callin         type_callin;
    v_callins        type_callins;
    v_callin_sends   type_callin_sends;
/******************************************************************************
   NAME:       getCallInData
   PURPOSE:

   REVISIONS:
   Ver        Date        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        2019-06-26   admin       1. Created this procedure.

   NOTES:

   Automatically available Auto Replace Keywords:
      Object Name:     getCallInData
      Sysdate:         2019-06-26
      Date and Time:   2019-06-26, 15:20:53, and 2019-06-26 15:20:53
      Username:        admin (set in TOAD Options, Procedure Editor)
      Table Name:       (set in the "New PL/SQL Object" dialog)

******************************************************************************/
BEGIN
    v_callins := type_callins();
    v_callin_sends := type_callin_sends();
    BEGIN
        FOR i IN 1..batchsize LOOP
            SELECT
                pkg_callin.dequeue
            INTO v_callin
            FROM
                dual;

            v_callins.extend;
            v_callins(i) := v_callin;
        END LOOP;
    EXCEPTION
        WHEN OTHERS THEN
            IF sqlcode != '-25228'                                    --队列没有可用数据时
             THEN
                ROLLBACK;
                RAISE;
            END IF;
    END;

    IF v_callins.count = 0 THEN
        return;
    END IF;
    FOR records IN (
        WITH tmp_callins AS (
            SELECT
                a.user_id       userid,
                b.*
            FROM
                ais_vorders        a,
                TABLE ( v_callins ) b
            WHERE
                a.customer_id = b.customer_id
                AND a.phone_nbr = b.oricallednumber
                AND a.partition_id = substr(b.oricallednumber, - 2)
        )
        SELECT
            d.*,
            c.push_url sendurl,
            ROWNUM r
        FROM
            ais_vbusiness   c,
            tmp_callins     d
        WHERE
            c.tctr_id = d.customer_id
    ) LOOP
        v_callin_sends.extend;
        v_callin_sends(records.r) := type_callin_send(NULL, NULL, NULL, NULL, NULL,
                 NULL, NULL, NULL, NULL, NULL,
                 NULL, NULL);

        v_callin_sends(records.r).taskid := records.taskid;
        v_callin_sends(records.r).callednumber := records.callednumber;
        v_callin_sends(records.r).callernumber := records.callernumber;
        v_callin_sends(records.r).oricallednumber := records.oricallednumber;
        v_callin_sends(records.r).starttime := records.starttime;
        v_callin_sends(records.r).endtime := records.endtime;
        v_callin_sends(records.r).filename := records.filename;
        v_callin_sends(records.r).uuid := records.uuid;
        v_callin_sends(records.r).userid := records.userid;
        v_callin_sends(records.r).customer_id := records.customer_id;
        v_callin_sends(records.r).sendurl := records.sendurl;
    END LOOP;

--    Open O_Callins For With C As (
--                          Select
--                              A.Message,
--                              B.*
--                          From
--                              Ais_Vnotify             A,
--                              Table ( V_Callin_Sends )  B
--                          Where
--                              A.Taskid (+) = B.Taskid
--                      )
--                      Select
--                          A.Serialnum,
--                          A.Type,
--                          A.Content,
--                          A.Content_Class,
--                          A.Result,
--                          Decode(C.Customer_Id, '99999999', 1, 0) Issendsms,
--                          C.*
--                      From
--                          Ais_Vcontent A,
--                          C
--                      Where
--                          A.Taskid (+) = C.Taskid;

    OPEN o_callins FOR SELECT
                          a.serialnum,
                          a.type,
                          a.content,
                          a.content_class,
                          a.result,
                          decode(c.customer_id, '99999999', 0, 1) issendsms,
                          c.*
                      FROM
                          ais_vcontent            a,
                          TABLE ( v_callin_sends ) c
                      WHERE
                          a.taskid (+) = c.taskid;

EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        raise_application_error(-20001, sqlerrm || dbms_utility.format_error_backtrace);
END getcallindata;

/
--------------------------------------------------------
--  DDL for Procedure PROC_REPORT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "PROC_REPORT" (
v_beginTime                                   in varchar2,
v_endTime                                     in varchar2,
v_name                                        out  varchar2,               --客户名称
v_id                                          in   number,                 --客户编号
v_peoplenumber                                out  varchar2,               --在网用户数
v_adddaynumber                                out  varchar2,               --日增数
v_logoutdaynumber                             out  varchar2,               --日注销数
v_growthnumebr                                out  varchar2,               --日净增数
v_netincreaserate                             out  varchar2,               --日净增率
v_activeuser                                  out  varchar2,               --活跃用户数
v_activeuserratio                             out  varchar2,               --活跃用户占比
v_servicenumber                               out  varchar2,               ---服务次数
v_aiservicenumber                             out  varchar2,               --AI服务次数
v_aiserviceratio                              out  varchar2,               --AI服务占比
v_activeuseravgnumber                         out  varchar2,               --活跃用户人均服务次数
v_avgaiinteractionduration                    out  varchar2,               --平均AI交互时长（秒）  
v_result                                      out number                   --1成功，0失败
)
as
  v_customerSumSecond varchar2(10):='';            --每个客户的全部的秒


begin
--1.客户在网用户数
  --ais_torders 订购关系表 停止服务时间小于当前时间
  select ts.customer_name,db.numResult  into v_name,v_peoplenumber from  (
    select customer_id,count(customer_id)  numResult from (
    select t.phone_nbr,
           t.customer_id /*as "客户"*/,
           to_char(t.first_ordertime,'yyyy-MM-dd hh24:mi:ss') as "首次订购时间",
           to_char(t.last_ordertime,'yyyy-MM-dd hh24:mi:ss')  as "最近订购时间",
           to_char(t.pause_ordertime,'yyyy-MM-dd hh24:mi:ss')  as "暂停服务时间",
           to_char(t.stop_ordertime,'yyyy-MM-dd hh24:mi:ss')  as "停止服务时间"
      from ais_torders t where t.stop_ordertime >=sysdate  and t.customer_id=v_id
      order by  to_char(t.stop_ordertime,'yyyy-MM-dd hh24:mi:ss')  desc
      )A group by customer_id
    )db right join ais_tbusiness ts on db.customer_id=tctr_id;
  
--日新增数 
    --订购关系表 ais_torders停止服务时间小于统计的范围
    --并且首次订购或者最近一次订购时间在统计的范围
    select  case   when db.numResult>0 then   db.numResult  else  0 end into v_adddaynumber from  (
    select customer_id,count(customer_id) numResult from  (
     select t.phone_nbr,
            t.customer_id /*as "客户"*/,
            to_char(t.first_ordertime, 'yyyy-MM-dd hh24:mi:ss') as "首次订购时间",
            to_char(t.last_ordertime, 'yyyy-MM-dd hh24:mi:ss') as "最近订购时间",
            to_char(t.stop_ordertime, 'yyyy-MM-dd hh24:mi:ss') as "暂停订购时间"
       from ais_torders t where  t.stop_ordertime >=sysdate  and t.customer_id=v_id   and (
       (t.first_ordertime>= to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss')  and t.first_ordertime<= to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss'))
        or (t.last_ordertime>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and  t.last_ordertime<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss')) 
       )
    )B group  by customer_id
  )db right join ais_tbusiness ts on db.customer_id=ts.tctr_id;
  
--日注销数
  select  case when db.numResult>0 then db.numResult else 0 end  into  v_logoutdaynumber from  (
    select customer_id,count(customer_id) numResult from  (
     select t.phone_nbr,
            t.customer_id /*as "客户"*/,
             to_char(t.pause_ordertime,'yyyy-MM-dd hh24:mi:ss')  as "暂停服务时间"
       from ais_torders t
      where  t.customer_id=v_id   and( t.pause_ordertime>= to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and t.pause_ordertime<= to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss') )  or 
      (t.stop_ordertime>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and t.stop_ordertime<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss'))
    )B group  by customer_id
   )db right join ais_tbusiness ts on db.customer_id=tctr_id; 
   
-- 日净增数(日新增-日注销)
   select  round(v_adddaynumber-v_logoutdaynumber)*100||'%'  into v_growthnumebr from  dual;
--日净增率（净增数/在网用户数）
   select  round(v_growthnumebr/v_peoplenumber)*100||'%' into  v_netincreaserate  from  dual;

--活跃用户数(等于0的非白名单，非注册用户)
  select case when db.numResult>0 then db.numResult  else 0 end  into  v_activeuser  from  (
    select ca.CUSTOMER_ID, count(ca.CUSTOMER_ID)  numResult from (
        select v.*,row_number() over(partition by v.ORICALLEDNUMBER order by v.STARTTIME desc) called from 
        ais_vcallin v where v.CUSTOMER_ID is not null and  v.CUSTOMER_ID<>0 and  v.customer_id=v_id
         and v.STARTTIME>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and v.STARTTIME<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss')
         ) ca  where ca.called=1
    group by  CUSTOMER_ID
  )db  right join ais_tbusiness ts on db.customer_id=tctr_id; 
  
--活跃用户占比(活跃用户/在网用户数)
   select  round(v_activeuser/v_peoplenumber)*100||'%'  into  v_activeuserratio  from  dual;
  
--服务次数(所有用户呼转行为的总次数)
select case when db.numResult>0 then db.numResult else 0 end  into v_servicenumber from  (
  select v.CUSTOMER_ID, count(CUSTOMER_ID) as numResult
    from ais_vcallin v
   where v.CUSTOMER_ID is not null and  v.CUSTOMER_ID<>0 and v.customer_id=v_id
       and v.STARTTIME>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and
        v.STARTTIME<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss')
   group by CUSTOMER_ID
 )db right join ais_tbusiness ts on  db.customer_id=tctr_id;   
 
--AI服务次数 用户进入AI语音交互的次数（交互几个流程都始终记录一次）
select case when db.numResult>0 then  db.numResult else 0 end  into v_aiservicenumber from  (
  select A.CUSTOMER_ID,count(A.CUSTOMER_ID) as numResult from (
    select cn.*,vt.*,row_number() over(partition by vt.taskID order by vt.time desc) ta from ais_vcontent vt ,ais_vcallin cn
     where  cn.taskid=vt.taskid and  cn.CUSTOMER_ID is not null and  cn.CUSTOMER_ID<>0 and  vt.content= 'noanswer'
     and cn.STARTTIME>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss')  and cn.STARTTIME<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss')
   )A where  A.ta=2 
   group by A.CUSTOMER_ID
)db right join ais_tbusiness ts on db.customer_id=tctr_id ;

--AI服务占比(AI服务次数/呼转次数)
  select  round(v_aiservicenumber/v_activeuser,4)*100||'%'  into v_aiserviceratio from  dual;
  
--活跃用户人均服务次数(当天所有用户呼转服务次数/活跃用户数据)
  select  round(v_servicenumber/v_activeuser,4)*100||'%' into  v_activeuseravgnumber  from  dual;



--客户平均Ai交互时长（秒）[所有客户呼叫的时长]
  select case when db.numResult>0 then db.numResult else 0 end  into v_customerSumSecond from  (
   select  CUSTOMER_ID,
   sum(ceil((cn.ENDTIME -cn.STARTTIME) *24*60*60))as numResult
     from ais_vcallin cn
      where  cn.CUSTOMER_ID is not null and  cn.CUSTOMER_ID<>0  and cn.customer_id=v_id
   and cn.STARTTIME>=to_date(v_beginTime,'yyyy-mm-dd hh24:mi:ss') and cn.STARTTIME<=to_date(v_endTime,'yyyy-mm-dd hh24:mi:ss')
     group  by CUSTOMER_ID
  )db right join ais_tbusiness ts on db.customer_id=tctr_id ;
  
--平均AI交互时长（秒）【（所有客户呼叫的时长]）endtime-starttime/AI服务次数】
  select  round(v_customerSumSecond/v_aiservicenumber,4)*100||'%' into  v_avgaiinteractionduration  from  dual;

   commit;
   v_result :=1;
   
exception
when others then
    rollback;
    v_result :=0;
end proc_report;

/
--------------------------------------------------------
--  DDL for Procedure SEND_SMS
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "SEND_SMS" (msg varchar2) AS 
BEGIN
  insert into sms_history values (msg,sysdate);
END SEND_SMS;

/
--------------------------------------------------------
--  DDL for Package AIS_CONTEXT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "AIS_CONTEXT" Is
    Function Set_Context (
        In_Key     Varchar2,
        In_Value   Varchar2
    ) Return Number;

    Function Clear_Context Return Number;

End;

/
--------------------------------------------------------
--  DDL for Package PKG_CALLIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE "PKG_CALLIN" --Authid Current_User
As
   /******************************************************************************
      NAME:       CALLIN_QUEUE_PAG
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        2019-06-29      admin       1. Created this package.
   ******************************************************************************/

   Procedure Enqueue (In_options Dbms_aq.Enqueue_options_t, In_properties Dbms_aq.Message_properties_t, In_callin Type_callin);

   Procedure Enqueue (In_callin Type_callin);

   Procedure Dequeue (In_options          Dbms_aq.Dequeue_options_t,
                      In_properties       Dbms_aq.Message_properties_t,
                      Out_callin      Out Type_callin);

   Procedure Dequeue (Out_callin Out Type_callin);

   Function Dequeue
      Return Type_callin;
End Pkg_callin;

/
--------------------------------------------------------
--  DDL for Package Body AIS_CONTEXT
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "AIS_CONTEXT" Is

    Function Set_Context (
        In_Key     Varchar2,
        In_Value   Varchar2
    ) Return Number Is
    Begin
        Dbms_Session.Set_Context('AISWEB', In_Key, In_Value);
        Return 0;
    End;

    Function Clear_Context Return Number Is
    Begin
        Dbms_Session.Clear_Context('AISWEB', Null);
        Return 0;
    End;

End;

/
--------------------------------------------------------
--  DDL for Package Body PKG_CALLIN
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "PKG_CALLIN" 
As
   /******************************************************************************
      NAME:       CALLIN_QUEUE_PAG
      PURPOSE:

      REVISIONS:
      Ver        Date        Author           Description
      ---------  ----------  ---------------  ------------------------------------
      1.0        2019-06-29      admin       1. Created this package.
   ******************************************************************************/

   Procedure Enqueue (In_options Dbms_aq.Enqueue_options_t, In_properties Dbms_aq.Message_properties_t, In_callin Type_callin)
   As
      V_handle   Raw (16);
      V_queue_name   Varchar2 (32) := Sys_context ('userenv', 'current_schema') || '.QUEUE_CALLINS';
   Begin
      Dbms_aq.Enqueue (Queue_name           => V_queue_name,
                       Enqueue_options      => In_options,
                       Message_properties   => In_properties,
                       Payload              => In_callin,
                       Msgid                => V_handle);
   End;

   Procedure Enqueue (In_callin Type_callin)
   As
      V_options      Dbms_aq.Enqueue_options_t;
      V_properties   Dbms_aq.Message_properties_t;
      V_handle       Raw (16);
      Recipients     Dbms_aq.Aq$_recipient_list_t;
      V_queue_name   Varchar2 (32) := Sys_context ('userenv', 'current_schema') || '.QUEUE_CALLINS';
   Begin
      Recipients (1) := Sys.Aq$_agent ('callin', V_queue_name, Null);
      V_properties.Recipient_list := Recipients;
      V_properties.Delay := Dbms_aq.No_delay;
      V_properties.Expiration := Dbms_aq.Never;
      V_options.Visibility := Dbms_aq.On_commit;

      Dbms_aq.Enqueue (Queue_name           => V_queue_name,
                       Enqueue_options      => V_options,
                       Message_properties   => V_properties,
                       Payload              => In_callin,
                       Msgid                => V_handle);
   End;

   Procedure Dequeue (In_options          Dbms_aq.Dequeue_options_t,
                      In_properties       Dbms_aq.Message_properties_t,
                      Out_callin      Out Type_callin)
   As
      V_properties   Dbms_aq.Message_properties_t;
      V_handle       Raw (16);
      V_queue_name   Varchar2 (32) := Sys_context ('userenv', 'current_schema') || '.QUEUE_CALLINS';
   Begin
      V_properties := In_properties;
      Dbms_aq.Dequeue (Queue_name           => V_queue_name,
                       Dequeue_options      => In_options,
                       Message_properties   => V_properties,
                       Payload              => Out_callin,
                       Msgid                => V_handle);
   End;

   Procedure Dequeue (Out_callin Out Type_callin)
   As
      V_options      Dbms_aq.Dequeue_options_t;
      V_properties   Dbms_aq.Message_properties_t;
      V_handle       Raw (16);
      V_queue_name   Varchar2 (32) := Sys_context ('userenv', 'current_schema') || '.QUEUE_CALLINS';
   Begin
      V_options.Consumer_name := 'callin';
      V_options.Dequeue_mode := Dbms_aq.Remove;
      V_options.Navigation := Dbms_aq.Next_message;
      V_options.Visibility := Dbms_aq.On_commit;
      V_options.Wait := 1;
      V_options.Msgid := Null;
      Dbms_aq.Dequeue (Queue_name           => V_queue_name,
                       Dequeue_options      => V_options,
                       Message_properties   => V_properties,
                       Payload              => Out_callin,
                       Msgid                => V_handle);
   End;

   Function Dequeue
      Return Type_callin
   As
      V_options      Dbms_aq.Dequeue_options_t;
      V_properties   Dbms_aq.Message_properties_t;
      V_handle       Raw (16);
      V_callin       Type_callin;
      V_queue_name   Varchar2 (32) := Sys_context ('userenv', 'current_schema') || '.QUEUE_CALLINS';
   Begin
      V_options.Consumer_name := 'callin';
      V_options.Dequeue_mode := Dbms_aq.Remove;
      V_options.Navigation := Dbms_aq.Next_message;
      V_options.Visibility := Dbms_aq.On_commit;
      V_options.Wait := 1;
      V_options.Msgid := Null;

      Dbms_aq.Dequeue (Queue_name           => V_queue_name,
                       Dequeue_options      => V_options,
                       Message_properties   => V_properties,
                       Payload              => V_callin,
                       Msgid                => V_handle);
      Return V_callin;
   End;
End Pkg_callin;

/
--------------------------------------------------------
--  DDL for Synonymn PROC_SEND_SHORTMESSAGE
--------------------------------------------------------

  CREATE OR REPLACE SYNONYM "PROC_SEND_SHORTMESSAGE" FOR "PROC_SEND_SHORTMESSAGE";
--------------------------------------------------------
--  DDL for Queue QUEUE_CALLINS
--------------------------------------------------------

   BEGIN DBMS_AQADM.CREATE_QUEUE(
     Queue_name          => 'QUEUE_CALLINS',
     Queue_table         => 'CALLINS',
     Queue_type          =>  0,
     Max_retries         =>  5,
     Retry_delay         =>  0,
     dependency_tracking =>  FALSE);
  END;
/
--------------------------------------------------------
--  DDL for Queue Table CALLINS
--------------------------------------------------------

   BEGIN DBMS_AQADM.CREATE_QUEUE_TABLE(
     Queue_table        => '"CALLINS"',
     Queue_payload_type => 'TYPE_CALLIN',
     storage_clause     => 'PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 TABLESPACE LICHEN',
     Sort_list          => 'ENQ_TIME',
     Multiple_consumers =>  TRUE,
     Compatible         => '10.0.0');
  END;
/
--------------------------------------------------------
--  Constraints for Table AIS_TCRONTORLOG
--------------------------------------------------------

  ALTER TABLE "AIS_TCRONTORLOG" MODIFY ("TRQT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TAUDIT_TRIES_LIMIT
--------------------------------------------------------

  ALTER TABLE "AIS_TAUDIT_TRIES_LIMIT" ADD CONSTRAINT "AIS_TAUDIT_TRIES_LIMIT_PK" PRIMARY KEY ("AUDIT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TAUDIT_TRIES_LIMIT" MODIFY ("AUDIT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TBUSINESS
--------------------------------------------------------

  ALTER TABLE "AIS_TBUSINESS" ADD CONSTRAINT "PK_AIS_TBUSINESS" PRIMARY KEY ("TCTR_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TBUSINESS" ADD CONSTRAINT "CKC_OP_TYPE_ROBOT_TA2" CHECK (link_man is null or (link_man in ('1','2'))) ENABLE;
  ALTER TABLE "AIS_TBUSINESS" ADD CONSTRAINT "CKC_CUSTOMER_TYPE_AIS_TBUS" CHECK (customer_type is null or (customer_type in (1,2))) ENABLE;
  ALTER TABLE "AIS_TBUSINESS" MODIFY ("TCTR_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUTH_ROLE_RES_PERM
--------------------------------------------------------

  ALTER TABLE "AUTH_ROLE_RES_PERM" ADD CONSTRAINT "ARRP_ID" PRIMARY KEY ("ARRP_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AUTH_ROLE_RES_PERM" MODIFY ("ARRP_EDIT_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE_RES_PERM" MODIFY ("ARRP_ARP_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE_RES_PERM" MODIFY ("ARRP_ARO_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE_RES_PERM" MODIFY ("ARRP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TBLACKER
--------------------------------------------------------

  ALTER TABLE "AIS_TBLACKER" MODIFY ("TB_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TORDERS
--------------------------------------------------------

  ALTER TABLE "AIS_TORDERS" MODIFY ("TCLT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TSERVICE
--------------------------------------------------------

  ALTER TABLE "AIS_TSERVICE" ADD CONSTRAINT "PK_AIS_TSERVICE" PRIMARY KEY ("TSVE_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TSERVICE" MODIFY ("TSVE_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TCONFIG
--------------------------------------------------------

  ALTER TABLE "AIS_TCONFIG" ADD CONSTRAINT "PK_AIS_TCONFIG" PRIMARY KEY ("TCFG_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TCONFIG" MODIFY ("TCFG_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TACCOUNT
--------------------------------------------------------

  ALTER TABLE "AIS_TACCOUNT" ADD CONSTRAINT "PK_AIS_TACCOUNT" PRIMARY KEY ("TACT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TACCOUNT" MODIFY ("TACT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUTH_RES_PERM
--------------------------------------------------------

  ALTER TABLE "AUTH_RES_PERM" ADD CONSTRAINT "ARP_ID" PRIMARY KEY ("ARP_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_EDIT_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_EDIT_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_REG_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_REG_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PARENT_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_VALID_FLAG" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_ORDER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_REMARK" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_NAME" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_FINAL_NODE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_TYPE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_PERM_CODE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_RES_PERM" MODIFY ("ARP_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUTH_USER_ROLE
--------------------------------------------------------

  ALTER TABLE "AUTH_USER_ROLE" ADD CONSTRAINT "AUR_ID" PRIMARY KEY ("AUR_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_EDIT_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_EDIT_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_REG_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_REG_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_VALID_FLAG" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_ARO_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_AU_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER_ROLE" MODIFY ("AUR_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TTOKEN
--------------------------------------------------------

  ALTER TABLE "AIS_TTOKEN" ADD CONSTRAINT "PK_AIS_TTOKEN" PRIMARY KEY ("TTOK_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TTOKEN" MODIFY ("TTOK_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TASSISTANT
--------------------------------------------------------

  ALTER TABLE "AIS_TASSISTANT" ADD CONSTRAINT "PK_ASSISTANT" PRIMARY KEY ("ASSISTANT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TASSISTANT" MODIFY ("ASSISTANT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUTH_USER
--------------------------------------------------------

  ALTER TABLE "AUTH_USER" ADD CONSTRAINT "AU_ID" PRIMARY KEY ("AU_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AUTH_USER" MODIFY ("AU_EDIT_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_EDIT_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_REG_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_REG_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_VALID_FLAG" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_PASSWORD" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_LOGIN_NAME" NOT NULL ENABLE);
  ALTER TABLE "AUTH_USER" MODIFY ("AU_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TORDER
--------------------------------------------------------

  ALTER TABLE "AIS_TORDER" ADD CONSTRAINT "AIS_TORDER_PK" PRIMARY KEY ("TODR_ID", "PARTITION_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TORDER" MODIFY ("PARTITION_ID" NOT NULL ENABLE);
  ALTER TABLE "AIS_TORDER" MODIFY ("TODR_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TUSER
--------------------------------------------------------

  ALTER TABLE "AIS_TUSER" ADD CONSTRAINT "PK_AIS_TUSER" PRIMARY KEY ("USER_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TUSER" MODIFY ("USER_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AUTH_ROLE
--------------------------------------------------------

  ALTER TABLE "AUTH_ROLE" ADD CONSTRAINT "ARO_ID" PRIMARY KEY ("ARO_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_EDIT_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_EDIT_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_REG_DATE" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_REG_USER" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_VALID_FLAG" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_PARENT_ID" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_NAME" NOT NULL ENABLE);
  ALTER TABLE "AUTH_ROLE" MODIFY ("ARO_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TNOTIFY
--------------------------------------------------------

  ALTER TABLE "AIS_TNOTIFY" ADD CONSTRAINT "AIS_TNOTIFY_TID" PRIMARY KEY ("TASKID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  Constraints for Table AIS_TUSERDIY
--------------------------------------------------------

  ALTER TABLE "AIS_TUSERDIY" ADD CONSTRAINT "PK_AIS_TUSERDIY" PRIMARY KEY ("USERDIY_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TUSERDIY" MODIFY ("USERDIY_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TBILL
--------------------------------------------------------

  ALTER TABLE "AIS_TBILL" ADD CONSTRAINT "PK_AIS_TBILL" PRIMARY KEY ("TBL_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TBILL" MODIFY ("TBL_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table AIS_TCHECKPOINT
--------------------------------------------------------

  ALTER TABLE "AIS_TCHECKPOINT" ADD CONSTRAINT "AIS_TCHECKPOINT_PK" PRIMARY KEY ("CHECKPOINT_ID")
  USING INDEX  ENABLE;
  ALTER TABLE "AIS_TCHECKPOINT" MODIFY ("CHECKPOINT_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Ref Constraints for Table AIS_TCONFIG
--------------------------------------------------------

  ALTER TABLE "AIS_TCONFIG" ADD CONSTRAINT "FK_AIS_TCON_REFERENCE_AIS_TBIL" FOREIGN KEY ("BILL_ID")
	  REFERENCES "AIS_TBILL" ("TBL_ID") ENABLE;
  ALTER TABLE "AIS_TCONFIG" ADD CONSTRAINT "FK_AIS_TCON_REFERENCE_AIS_TBUS" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "AIS_TBUSINESS" ("TCTR_ID") ENABLE;
  ALTER TABLE "AIS_TCONFIG" ADD CONSTRAINT "FK_AIS_TCON_REFERENCE_AIS_TSER" FOREIGN KEY ("SERVICE_ID")
	  REFERENCES "AIS_TSERVICE" ("TSVE_ID") ENABLE;


-----------------------------------------------------------
create index index_ais_ttoken on ais_ttoken(create_time);
create index index_ais_ttoken_CUSTOMER_ID on ais_ttoken(CUSTOMER_ID);


------------------------------------------------------------
